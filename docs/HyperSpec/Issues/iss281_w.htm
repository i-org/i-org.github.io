<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Issue PUSHNEW-STORE-REQUIRED Writeup</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="../Issues/iss279_w.htm">
<LINK REL=UP HREF="../Issues/iss281.htm">
<LINK REL=NEXT HREF="../Issues/iss282_w.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="../Issues/iss279_w.htm">◀</A><A REL=UP HREF="../Issues/iss281.htm">▲</A><A REL=NEXT HREF="../Issues/iss282_w.htm">▶</A></h1>

<HR>



<H2>Issue PUSHNEW-STORE-REQUIRED Writeup</H2>

<PRE><B>Issue:</B>              <A HREF="iss281.htm">PUSHNEW-STORE-REQUIRED</A><P>
<B>References:</B>         <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A><P>
Related issues:     <A HREF="iss279_m.htm">PUSH-EVALUATION-ORDER</A><P>
                    <A HREF="iss306.htm">SETF-GET-DEFAULT</A><P>
<B>Category:</B>           CLARIFICATION<P>
<B>Edit history:</B>       v1, 14 Feb 1991, Sandra Loosemore<P>
                    v2, 26 Mar 1991, Sandra Loosemore (amendment from meeting)<P>
<B>Status:</B>             v2 (proposal UNSPECIFIED) accepted by X3J13, Mar 1991<P>
<P>
<B>Problem description:<P>
</B><P>
  The description of the <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> macro says contradictory things about<P>
  whether the storing form for its place subform must or must not be <P>
  evaluated in the situation where the &lt;item&gt; is already a member of<P>
  the list.<P>
<P>
  In CLtL, <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> is first described as:<P>
<P>
    If the &lt;item&gt; is not already a member of the list (...), then the <P>
    &lt;item&gt; is consed onto the front of the list, and the augmented list is<P>
    stored back into &lt;place&gt; and returned; otherwise the unaugmented list<P>
    is returned.<P>
<P>
  This passage implies that <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> is effectively (modulo order of<P>
  evaluation issues and keyword arguments): <P>
<P>
    (<A REL=DEFINITION HREF="../Body/s_if.htm#if"><B>if</B></A> (<A REL=DEFINITION HREF="../Body/a_not.htm#not"><B>not</B></A> (<A REL=DEFINITION HREF="../Body/a_member.htm#member"><B>member</B></A> &lt;item&gt; &lt;place&gt;))<P>
        (<A REL=DEFINITION HREF="../Body/a_setf.htm#setf"><B>setf</B></A> &lt;place&gt; (<A REL=DEFINITION HREF="../Body/a_cons.htm#cons"><B>cons</B></A> &lt;item&gt; &lt;place&gt;))<P>
        &lt;place&gt;)<P>
<P>
  which executes the storing form for &lt;place&gt; only if the member test<P>
  fails.<P>
<P>
  However, later on it's said that <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> is effectively (again modulo<P>
  order of evaluation issues and keyword arguments):<P>
<P>
    (<A REL=DEFINITION HREF="../Body/a_setf.htm#setf"><B>setf</B></A> &lt;place&gt; (<A REL=DEFINITION HREF="../Body/f_adjoin.htm#adjoin"><B>adjoin</B></A> &lt;item&gt; &lt;place&gt;))<P>
<P>
  which executes the storing form for &lt;place&gt; unconditionally.<P>
<P>
  So which of these two models for its expansion is correct?<P>
<P>
<P>
<B>Proposal (PUSHNEW-STORE-REQUIRED:UNSPECIFIED):<P>
</B><P>
  Clarify that it is not specified whether <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> executes the storing<P>
  form for its &lt;place&gt; subform in the situation where the &lt;item&gt; is<P>
  already a member of the list.<P>
<P>
<B>Rationale:<P>
</B><P>
  The store operation might be expensive and there's no point in doing<P>
  it if the value being stored hasn't changed.  On the other hand, in<P>
  some implementations <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> always does the store.<P>
<P>
<B>Current Practice:<P>
</B><P>
  In both Lucid and Allegro, <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> always does the store.<P>
<P>
<B>Cost to Implementors:<P>
</B><P>
  None.  No implementation is required to change.<P>
<P>
<B>Cost to Users:<P>
</B><P>
  Probably none.  <P>
<P>
<B>Cost of non-adoption:<P>
</B><P>
  The description of <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> is confusing.<P>
<P>
<B>Performance impact:<P>
</B><P>
  Not doing the store when it's not necessary can speed things up.<P>
<P>
<B>Benefits:<P>
</B><P>
  The cost of non-adoption is avoided.<P>
<P>
<B>Esthetics:<P>
</B><P>
  <A REL=DEFINITION HREF="../Body/m_pshnew.htm#pushnew"><B>PUSHNEW</B></A> would be less confusing if we could just agree on one or <P>
  the other of the two models as being correct and remove all mention<P>
  of the other from its description in the <A REL=DEFINITION HREF="../Body/07_ffb.htm#standard"><B>standard</B></A>.<P>
<P>
<B>Discussion:<P>
</B><P>
  There is a potential for generalization to other read-modify-write <P>
  macros.  See the discussion section of issue <A HREF="iss306.htm">SETF-GET-DEFAULT</A>.<P>
<P>
</PRE>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
