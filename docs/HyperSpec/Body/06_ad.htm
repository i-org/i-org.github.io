<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 6.1.4</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="06_ace.htm">
<LINK REL=UP HREF="06_a.htm">
<LINK REL=NEXT HREF="06_ada.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="06_ace.htm">◀</A><A REL=UP HREF="06_a.htm">▲</A><A REL=NEXT HREF="06_ada.htm">▶</A></H1>

<HR>

<H2>
6.1.4 Termination Test Clauses</H2>  <P>
The <b>repeat</b> construct causes iteration to terminate after a specified number of times. The loop body executes <I>n</I> times, where <I>n</I> is the value of the expression <I>form</I>. The <I>form</I> argument is evaluated one time in the loop prologue. If the expression evaluates to 0 or to a negative <A REL=DEFINITION HREF="26_glo_n.htm#number"><I>number</I></A>, the loop body is not evaluated. <P>
The constructs <b>always</b>, <b>never</b>, <b>thereis</b>, <b>while</b>, <b>until</b>, and the macro <A REL=DEFINITION HREF="m_loop_f.htm#loop-finish"><B>loop-finish</B></A> allow conditional termination of iteration within a <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A>. <P>
The constructs <b>always</b>, <b>never</b>, and <b>thereis</b> provide specific values to be returned when a <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> terminates. Using <b>always</b>, <b>never</b>, or <b>thereis</b> in a loop with value accumulation clauses that are not <b>into</b> causes an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_progra.htm#program-error"><B>program-error</B></A> to be signaled (at macro expansion time). Since <b>always</b>, <b>never</b>, and <b>thereis</b> use  the <A REL=DEFINITION HREF="s_ret_fr.htm#return-from"><B>return-from</B></A> <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>  to terminate iteration, any <b>finally</b> clause that is supplied is not evaluated when exit occurs due to any of these constructs. In all other respects these constructs behave like the <b>while</b> and <b>until</b> constructs. <P>
 The <b>always</b> construct takes one <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> and terminates the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> if the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> ever evaluates to <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>; in this case, it returns <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. Otherwise, it provides a default return value of <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>. If the value of the supplied <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is never <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, some other construct can terminate the iteration. <P>
The <b>never</b> construct terminates iteration the first time that the value of the supplied <I>form</I> is <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A>; the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> returns <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. If the value of the supplied <I>form</I> is always <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, some other construct can terminate the iteration. Unless some other clause contributes a return value, the default value returned is <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>. <P>
The <b>thereis</b> construct terminates iteration the first time that the value of the supplied <I>form</I> is <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A>; the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> returns the value of the supplied <I>form</I>. If the value of the supplied <I>form</I> is always <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, some other construct can terminate the iteration. Unless some other clause contributes a return value, the default value returned is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
 There are two differences between the <b>thereis</b> and <b>until</b> constructs: <P>
<P><ul><li>*  The <b>until</b> construct does not return a value or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> based on the value of the supplied <I>form</I>. <P></li>
<li>*  The <b>until</b> construct executes any <b>finally</b> clause. Since <b>thereis</b> uses  the <A REL=DEFINITION HREF="s_ret_fr.htm#return-from"><B>return-from</B></A> <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>  to terminate iteration, any <b>finally</b> clause that is supplied is not evaluated when exit occurs due to <b>thereis</b>. <P></li>
<P></ul><P>
  The <b>while</b> construct allows iteration to continue until the supplied <I>form</I> evaluates to <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>. The supplied <I>form</I> is reevaluated at the location of the <b>while</b> clause. <P>
The <b>until</b> construct is equivalent to <b>while (not </b><I>form</I><b>)...</b>. If the value of the supplied <I>form</I> is <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A>, iteration terminates. <P>
Termination-test control constructs can be used anywhere within the loop body. The termination tests are used in the order in which they appear. If an <b>until</b> or <b>while</b> clause causes termination, any clauses that precede it in the source are still evaluated. If the <b>until</b> and <b>while</b> constructs cause termination, control is passed to the loop epilogue, where any <b>finally</b> clauses will be executed. <P>
There are two differences between the <b>never</b> and <b>until</b> constructs: <P>
<P><ul><li>*  The <b>until</b> construct does not return <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A> or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> based on the value of the supplied <I>form</I>. <P></li>
<li>*  The <b>until</b> construct does not bypass any <b>finally</b> clauses. Since <b>never</b> uses  the <A REL=DEFINITION HREF="s_ret_fr.htm#return-from"><B>return-from</B></A> <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>  to terminate iteration, any <b>finally</b> clause that is supplied is not evaluated when exit occurs due to <b>never</b>. <P></li></ul><P>
In most cases it is not necessary to use <A REL=DEFINITION HREF="m_loop_f.htm#loop-finish"><B>loop-finish</B></A> because other loop control clauses terminate the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A>. The macro <A REL=DEFINITION HREF="m_loop_f.htm#loop-finish"><B>loop-finish</B></A> is used to provide a normal exit from a nested conditional inside a <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A>. Since <A REL=DEFINITION HREF="m_loop_f.htm#loop-finish"><B>loop-finish</B></A> transfers control to the loop epilogue, using <A REL=DEFINITION HREF="m_loop_f.htm#loop-finish"><B>loop-finish</B></A> within a <b>finally</b> expression can cause infinite looping. <P>

 
<h2><A REL=CHILD HREF="06_ada.htm">
6.1.4.1 Examples of REPEAT clause</a></h2>
 
<h2><A REL=CHILD HREF="06_adb.htm">
6.1.4.2 Examples of ALWAYS, NEVER, and THEREIS clauses</a></h2>
 
<h2><A REL=CHILD HREF="06_adc.htm">
6.1.4.3 Examples of WHILE and UNTIL clauses</a></h2><p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss224.htm">LOOP-NAMED-BLOCK-NIL:OVERRIDE</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
