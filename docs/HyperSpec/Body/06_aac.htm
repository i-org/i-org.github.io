<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 6.1.1.3</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="06_aab.htm">
<LINK REL=UP HREF="06_aa.htm">
<LINK REL=NEXT HREF="06_aad.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="06_aab.htm">◀</A><A REL=UP HREF="06_aa.htm">▲</A><A REL=NEXT HREF="06_aad.htm">▶</A></H1>

<HR>

<H2>
6.1.1.3 Parsing Loop Clauses</H2> <P>
The syntactic parts of an extended <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> are called clauses; the rules for parsing are determined by that clause's keyword. The following example shows a <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> with six clauses: <P>
<PRE>
 (loop for i from 1 to (compute-top-value)       ; first clause
       while (not (unacceptable i))              ; second clause
       collect (square i)                        ; third clause
       do (format t &quot;Working on ~D now&quot; i)       ; fourth clause
       when (evenp i)                            ; fifth clause
         do (format t &quot;~D is a non-odd number&quot; i)
       finally (format t &quot;About to exit!&quot;))      ; sixth clause
</PRE>
</b> <P>
Each <A REL=DEFINITION HREF="26_glo_l.htm#loop_keyword"><I>loop keyword</I></A> introduces either a compound loop clause or a simple loop clause that can consist of a <A REL=DEFINITION HREF="26_glo_l.htm#loop_keyword"><I>loop keyword</I></A> followed by a single <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. The number of <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> in a clause is determined by the <A REL=DEFINITION HREF="26_glo_l.htm#loop_keyword"><I>loop keyword</I></A> that begins the clause and by the auxiliary keywords in the clause. The keywords <b>do</b>,  <b>doing</b>,  <b>initially</b>, and <b>finally</b> are the only loop keywords that can take any number of <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> and group them as an <A REL=DEFINITION HREF="26_glo_i.htm#implicit_progn"><I>implicit progn</I></A>. <P>
Loop clauses can contain auxiliary keywords, which are sometimes called prepositions. For example, the first clause in the code above includes the prepositions <b>from</b> and <b>to</b>, which mark the value from which stepping begins and the value at which stepping ends. <P>
For detailed information about <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> syntax, see the <A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macro</I></A> <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A>. <P>
<p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss223.htm">LOOP-MISCELLANEOUS-REPAIRS:FIX</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
