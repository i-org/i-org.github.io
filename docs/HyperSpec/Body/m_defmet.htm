<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Macro DEFMETHOD</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="m_defgen.htm">
<LINK REL=UP HREF="c_object.htm">
<LINK REL=NEXT HREF="f_find_c.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="m_defgen.htm">◀</A><A REL=UP HREF="c_object.htm">▲</A><A REL=NEXT HREF="f_find_c.htm">▶</A></H1>

<HR>

<A NAME="defmethod"><I>Macro</I> <B>DEFMETHOD</B></A> <P>
 <P>
<p><b>●语法设定:</b><p>
 <P>

<B>defmethod</B> <I><I>function-name</I> {<I>method-qualifier</I>}* <I>specialized-lambda-list</I> [[<I>declaration</I><B>*</B> | <I>documentation</I>]] <I>form</I><B>*</B></I><P> =&gt; <I>new-method</I><P>
 <P>
<P><I>function-name</I>::= {<A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> | <b>(setf <A REL=DEFINITION HREF="26_glo_s.htm#symbol"></b><I>symbol</I><b></A>)</b>} <P><I>method-qualifier</I>::= <A REL=DEFINITION HREF="26_glo_n.htm#non-list"><I>non-list</I></A> <P><PRE>
specialized-lambda-list::= ({var | (var parameter-specializer-name)}* 
                            [&amp;optional {var | (var [initform [supplied-p-parameter] ])}*] 
                            [&amp;rest var] 
                            [&amp;key{var | ({var | (<A REL=DEFINITION HREF="26_glo_k.htm#keyword">keyword</A>var)} [initform [supplied-p-parameter] ])}*
                                 [&amp;allow-other-keys] ] 
                            [&amp;aux {var | (var [initform] )}*] ) 
parameter-specializer-name::= <A REL=DEFINITION HREF="26_glo_s.htm#symbol">symbol</A> | (eql eql-specializer-form)
</PRE>
 <P> <P>
<p><b>●参数和值:</b><P>
 <P>
<I>declaration</I>---a <A REL=DEFINITION HREF="s_declar.htm#declare"><B>declare</B></A> <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A>; not evaluated. <P>
<I>documentation</I>---a <A REL=DEFINITION HREF="26_glo_s.htm#string"><I>string</I></A>; not evaluated. <P>
<I>var</I>---a <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A>. <P>
<I>eql-specializer-form</I>---a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <P>
<I>Form</I>---a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <P>
<I>Initform</I>---a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <P>
<I>Supplied-p-parameter</I>---variable name. <P>
<I>new-method</I>---the new <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<p><b>●详情:</b><P>
 <P>
The macro <A REL=DEFINITION HREF="#defmethod"><B>defmethod</B></A> defines a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> on a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. <P>
If <b>(fboundp </b><I>function-name</I><b>)</b> is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> is created with default values for the argument precedence order (each argument is more specific than the arguments to its right in the argument list), for the generic function class (the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> <A REL=DEFINITION HREF="t_std_ge.htm#standard-generic-function"><B>standard-generic-function</B></A>), for the method class (the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> <A REL=DEFINITION HREF="t_std_me.htm#standard-method"><B>standard-method</B></A>), and for the method combination type (the standard method combination type). The <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> is congruent with the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> being defined; if the <A REL=DEFINITION HREF="#defmethod"><B>defmethod</B></A> form mentions keyword arguments, the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> will mention <b> ..... key</b> (but no keyword arguments). If <I>function-name</I> names an <A REL=DEFINITION HREF="26_glo_o.htm#ordinary_function"><I>ordinary function</I></A>, a <A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macro</I></A>, or a <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>, an error is signaled. <P>
If a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> is currently named by <I>function-name</I>, the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> must be congruent with the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. If this condition does not hold, an error is signaled. For a definition of congruence in this context, see <A REL=CHILD HREF="07_fd.htm">Section 7.6.4 (Congruent Lambda-lists for all Methods of a Generic Function)</A>. <P>
Each <I>method-qualifier</I> argument is an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that is used by method combination to identify the given <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A>. The method combination type might further restrict what a method <A REL=DEFINITION HREF="26_glo_q.htm#qualifier"><I>qualifier</I></A> can be. The standard method combination type allows for <A REL=DEFINITION HREF="26_glo_u.htm#unqualified_method"><I>unqualified methods</I></A> and <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> whose sole <A REL=DEFINITION HREF="26_glo_q.htm#qualifier"><I>qualifier</I></A> is one of the keywords <b>:before</b>, <b>:after</b>, or <b>:around</b>. <P>
The <I>specialized-lambda-list</I> argument is like an ordinary <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> except that the <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>names</I></A> of required parameters can be replaced by specialized parameters. A specialized parameter is a list of the form <b>(</b><I>var</I><b> </b><I>parameter-specializer-name</I><b>)</b>. Only required parameters can be specialized. If <I>parameter-specializer-name</I> is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> it names a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>; if it is a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>, it is of the form <b>(eql </b><I>eql-specializer-form</I><b>)</b>. The parameter specializer name <b>(eql </b><I>eql-specializer-form</I><b>)</b> indicates that the corresponding argument must be <A REL=DEFINITION HREF="f_eql.htm#eql"><B>eql</B></A> to the <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that is the value of <I>eql-specializer-form</I> for the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> to be applicable. The <I>eql-specializer-form</I> is evaluated at the time that the expansion of the <A REL=DEFINITION HREF="#defmethod"><B>defmethod</B></A> macro is evaluated. If no <A REL=DEFINITION HREF="26_glo_p.htm#parameter_specializer_name"><I>parameter specializer name</I></A> is specified for a given required parameter, the <A REL=DEFINITION HREF="26_glo_p.htm#parameter_specializer"><I>parameter specializer</I></A> defaults to the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> <A REL=DEFINITION HREF="t_t.htm#t"><B>t</B></A>. For further discussion, see <A REL=CHILD HREF="07_fb.htm">Section 7.6.2 (Introduction to Methods)</A>. <P>
The <I>form</I> arguments specify the method body. The body of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> is enclosed in an <A REL=DEFINITION HREF="26_glo_i.htm#implicit_block"><I>implicit block</I></A>. If <I>function-name</I> is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>, this block bears the same <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> as the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. If <I>function-name</I> is a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of the form <b>(setf </b><I>symbol</I><b>)</b>, the <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> of the block is <I>symbol</I>. <P>
The <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that is created is that given by the method class option of the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> on which the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> is defined. <P>
If the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> already has a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> that agrees with the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> being defined on <A REL=DEFINITION HREF="26_glo_p.htm#parameter_specializer"><I>parameter specializers</I></A> and <A REL=DEFINITION HREF="26_glo_q.htm#qualifier"><I>qualifiers</I></A>, <A REL=DEFINITION HREF="#defmethod"><B>defmethod</B></A> replaces the existing <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> with the one now being defined. For a definition of agreement in this context. see <A REL=CHILD HREF="07_fc.htm">Section 7.6.3 (Agreement on Parameter Specializers and Qualifiers)</A>. <P>
The <A REL=DEFINITION HREF="26_glo_p.htm#parameter_specializer"><I>parameter specializers</I></A> are derived from the <A REL=DEFINITION HREF="26_glo_p.htm#parameter_specializer_name"><I>parameter specializer names</I></A> as described in <A REL HREF="07_fb.htm">Section 7.6.2 (Introduction to Methods)</A>. <P>
The expansion of the <A REL=DEFINITION HREF="#defmethod"><B>defmethod</B></A> macro ``refers to'' each specialized parameter (see the description of <A REL=DEFINITION HREF="d_ignore.htm#ignore"><B>ignore</B></A> within the description of <A REL=DEFINITION HREF="s_declar.htm#declare"><B>declare</B></A>). This includes parameters that have an explicit <A REL=DEFINITION HREF="26_glo_p.htm#parameter_specializer_name"><I>parameter specializer name</I></A> of <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>. This means that a compiler warning does not occur if the body of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> does not refer to a specialized parameter, while a warning might occur if the body of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> does not refer to an unspecialized parameter. For this reason, a parameter that specializes on <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A> is not quite synonymous with an unspecialized parameter in this context. <P>
 Declarations at the head of the method body that apply to the method's <A REL=DEFINITION HREF="26_glo_l.htm#lambda_variable"><I>lambda variables</I></A> are treated as <A REL=DEFINITION HREF="26_glo_b.htm#bound_declaration"><I>bound declarations</I></A> whose <A REL=DEFINITION HREF="26_glo_s.htm#scope"><I>scope</I></A> is the same as the corresponding <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>bindings</I></A>. <P>
Declarations at the head of the method body that apply to the functional bindings of <A REL=DEFINITION HREF="f_call_n.htm#call-next-method"><B>call-next-method</B></A> or <A REL=DEFINITION HREF="f_next_m.htm#next-method-p"><B>next-method-p</B></A> apply to references to those functions within the method body <I>forms</I>. Any outer <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>bindings</I></A> of the <A REL=DEFINITION HREF="26_glo_f.htm#function_name"><I>function names</I></A> <A REL=DEFINITION HREF="f_call_n.htm#call-next-method"><B>call-next-method</B></A> and <A REL=DEFINITION HREF="f_next_m.htm#next-method-p"><B>next-method-p</B></A>, and declarations associated with such <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>bindings</I></A> are <I>shadowed</I>[2] within the method body <I>forms</I>. <P>
The <A REL=DEFINITION HREF="26_glo_s.htm#scope"><I>scope</I></A> of <A REL=DEFINITION HREF="26_glo_f.htm#free_declaration"><I>free declarations</I></A> at the head of the method body is the entire method body, which includes any implicit local function definitions but excludes <A REL=DEFINITION HREF="26_glo_i.htm#initialization_form"><I>initialization forms</I></A> for the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_variable"><I>lambda variables</I></A>.  <P>
 <A REL=DEFINITION HREF="#defmethod"><B>defmethod</B></A> is not required to perform any compile-time side effects. In particular, the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> are not installed for invocation during compilation. An <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> may choose to store information about the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> for the purposes of compile-time error-checking (such as checking the number of arguments on calls, or noting that a definition for the function name has been seen).  <P>
 <I>Documentation</I> is attached as a <A REL=DEFINITION HREF="26_glo_d.htm#documentation_string"><I>documentation string</I></A> to the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>.  <P>
<p><b>●例子:</b> None.
 <P>
<p><b>●受制于:</b><P>
 <P>
The definition of the referenced <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. <P>
<p><b>●例外情况：</b><P>
 <P>
If <I>function-name</I> names an <A REL=DEFINITION HREF="26_glo_o.htm#ordinary_function"><I>ordinary function</I></A>, a <A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macro</I></A>, or a <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>, an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_error.htm#error"><B>error</B></A> is signaled. <P>
If a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> is currently named by <I>function-name</I>, the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> must be congruent with the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>, or an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_error.htm#error"><B>error</B></A> is signaled. <P>
 <p><b>●更多信息:</b><P>
 <P>
<A REL=DEFINITION HREF="m_defgen.htm#defgeneric"><B>defgeneric</B></A>, <A REL=DEFINITION HREF="f_docume.htm#documentation"><B>documentation</B></A>, <h2><A REL=CHILD HREF="07_fb.htm">Section 7.6.2 (Introduction to Methods)</A>, <h2><A REL=CHILD HREF="07_fd.htm">Section 7.6.4 (Congruent Lambda-lists for all Methods of a Generic Function)</A>, <h2><A REL=CHILD HREF="07_fc.htm">Section 7.6.3 (Agreement on Parameter Specializers and Qualifiers)</A>, <h2><A REL=CHILD HREF="03_dk.htm">Section 3.4.11 (Syntactic Interaction of Documentation Strings and Declarations)</A> <P>
<p><b>●说明：</b> 无。</p>
 <P>
 <P>
<p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss135.htm">DOCUMENTATION-FUNCTION-BUGS:FIX</A><LI> <A REL=CHILD HREF="../Issues/iss059.htm">COMPILE-FILE-HANDLING-OF-TOP-LEVEL-FORMS:CLARIFY</A><LI> <A REL=CHILD HREF="../Issues/iss107.htm">DEFMETHOD-DECLARATION-SCOPE:CORRESPONDS-TO-BINDINGS</A><LI> <A REL=CHILD HREF="../Issues/iss097.htm">DECLS-AND-DOC</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
