<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Function EQL</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_eq.htm">
<LINK REL=UP HREF="c_data_a.htm">
<LINK REL=NEXT HREF="f_equal.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="f_eq.htm">◀</A><A REL=UP HREF="c_data_a.htm">▲</A><A REL=NEXT HREF="f_equal.htm">▶</A></H1>

<HR>

<A NAME="eql"><I>Function</I> <B>EQL</B></A> <P>
<p><b>●语法设定:</b><p>
 <P>

<B>eql</B> <I>x y</I> =&gt; <I>generalized-boolean</I><P>
 <P>
<p><b>●参数和值:</b><P>
 <P>
<I>x</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>y</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>generalized-boolean</I>---a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. <P>
<p><b>●详情:</b><P>
 <P>
The value of <A REL=DEFINITION HREF="#eql"><B>eql</B></A> is <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> of two objects, <I>x</I> and <I>y</I>, in the folowing cases: <P><ul><li>1.  If <I>x</I> and <I>y</I> are <A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A>. </li><li>2.  If <I>x</I> and <I>y</I> are both <A REL=DEFINITION HREF="26_glo_n.htm#number"><I>numbers</I></A> of the same <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> and the same value. </li><li>3.  If they are both <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> that represent the same character. <P></li></ul><P>
Otherwise the value of <A REL=DEFINITION HREF="#eql"><B>eql</B></A> is <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>. <P>
If an implementation supports positive and negative zeros as <A REL=DEFINITION HREF="26_glo_d.htm#distinct"><I>distinct</I></A> values, then <b>(eql 0.0 -0.0)</b> returns <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>. Otherwise, when the syntax <b>-0.0</b> is read it is interpreted as the value <b>0.0</b>, and so <b>(eql 0.0 -0.0)</b> returns <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A>. <P>
<p><b>●例子:</b><P>
 <P>
<PRE>
 (eql 'a 'b) =&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (eql 'a 'a) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (eql 3 3) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (eql 3 3.0) =&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (eql 3.0 3.0) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (eql #c(3 -4) #c(3 -4)) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (eql #c(3 -4.0) #c(3 -4)) =&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (eql (cons 'a 'b) (cons 'a 'c)) =&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (eql (cons 'a 'b) (cons 'a 'b)) =&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (eql '(a . b) '(a . b))
=&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
OR=&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (progn (setq x (cons 'a 'b)) (eql x x)) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (progn (setq x '(a . b)) (eql x x)) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (eql #\A #\A) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (eql &quot;Foo&quot; &quot;Foo&quot;)
=&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
OR=&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (eql &quot;Foo&quot; (copy-seq &quot;Foo&quot;)) =&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
 (eql &quot;FOO&quot; &quot;foo&quot;) =&gt;  <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
</PRE>
</b> <P>
Normally <b>(eql 1.0s0 1.0d0)</b> is false, under the assumption that <b>1.0s0</b> and <b>1.0d0</b> are of distinct data types. However, implementations that do not provide four distinct floating-point formats are permitted to ``collapse'' the four formats into some smaller number of them; in such an implementation <b>(eql 1.0s0 1.0d0)</b> might be true. <P>
<p><b>●副作用:</b> None.
 <P>
<p><b>●受制于：</b> 无。</p>
 <P>
<p><b>●例外情况：</b> 无。</p>
 <P>
<p><b>●更多信息:</b><P>
 <P>
<A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A>, <A REL=DEFINITION HREF="f_equal.htm#equal"><B>equal</B></A>, <A REL=DEFINITION HREF="f_equalp.htm#equalp"><B>equalp</B></A>, <A REL=DEFINITION HREF="f_eq_sle.htm#EQ"><B>=</B></A>, <A REL=DEFINITION HREF="f_chareq.htm#charEQ"><B>char=</B></A> <P>
<p><b>●说明:</b><P>
 <P>
<A REL=DEFINITION HREF="#eql"><B>eql</B></A> is the same as <A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A>, except that if the arguments are <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> or <A REL=DEFINITION HREF="26_glo_n.htm#number"><I>numbers</I></A> of the same type then their values are compared. Thus <A REL=DEFINITION HREF="#eql"><B>eql</B></A> tells whether two <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> are conceptually the same, whereas <A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A> tells whether two <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> are implementationally identical. It is for this reason that <A REL=DEFINITION HREF="#eql"><B>eql</B></A>, not <A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A>, is the default comparison predicate for <A REL=DEFINITION HREF="26_glo_o.htm#operator"><I>operators</I></A> that take <A REL=DEFINITION HREF="26_glo_s.htm#sequence"><I>sequences</I></A> as arguments. <P>
<A REL=DEFINITION HREF="#eql"><B>eql</B></A> may not be true of two <A REL=DEFINITION HREF="26_glo_f.htm#float"><I>floats</I></A> even when they represent the same value. <A REL=DEFINITION HREF="f_eq_sle.htm#EQ"><B>=</B></A> is used to compare mathematical values. <P>
Two <A REL=DEFINITION HREF="26_glo_c.htm#complex"><I>complex</I></A> numbers are considered to be <A REL=DEFINITION HREF="#eql"><B>eql</B></A> if their real parts are <A REL=DEFINITION HREF="#eql"><B>eql</B></A> and their imaginary parts are <A REL=DEFINITION HREF="#eql"><B>eql</B></A>. For example, <b>(eql #C(4 5) #C(4 5))</b> is <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> and <b>(eql #C(4 5) #C(4.0 5.0))</b> is <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>. Note that while <b>(eql #C(5.0 0.0) 5.0)</b> is <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>, <b>(eql #C(5 0) 5)</b> is <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A>. In the case of <b>(eql #C(5.0 0.0) 5.0)</b> the two arguments are of different types, and so cannot satisfy <A REL=DEFINITION HREF="#eql"><B>eql</B></A>. In the case of <b>(eql #C(5 0) 5)</b>, <b>#C(5 0)</b> is not a <A REL=DEFINITION HREF="26_glo_c.htm#complex"><I>complex</I></A> number, but is automatically reduced to the <A REL=DEFINITION HREF="26_glo_i.htm#integer"><I>integer</I></A> <b>5</b>. <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
