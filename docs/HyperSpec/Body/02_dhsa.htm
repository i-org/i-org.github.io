<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 2.4.8.19.1</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="02_dhs.htm">
<LINK REL=UP HREF="02_dhs.htm">
<LINK REL=NEXT HREF="02_dhsb.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="02_dhs.htm">◀</A><A REL=UP HREF="02_dhs.htm">▲</A><A REL=NEXT HREF="02_dhsb.htm">▶</A></H1>

<HR>

<H2>
2.4.8.19.1 Examples of Sharpsign Vertical-Bar</H2> <P>
The following are some examples that exploit the <b>#</b>|<b>...</b>|<b>#</b> notation: <P>
<PRE>
;;; In this example, some debugging code is commented out with #|...|#
;;; Note that this kind of comment can occur in the middle of a line
;;; (because a delimiter marks where the end of the comment occurs)
;;; where a semicolon comment can only occur at the end of a line 
;;; (because it comments out the rest of the line).
 (defun add3 (n) #|(format t &quot;~&amp;Adding 3 to ~D.&quot; n)|# (+ n 3))

;;; The examples that follow show issues related to #| ... |# nesting.

;;; In this first example, #| and |# always occur properly paired,
;;; so nesting works naturally.
 (defun mention-fun-fact-1a ()
   (format t &quot;CL uses ; and #|...|# in comments.&quot;))
=&gt;  MENTION-FUN-FACT-1A
 (mention-fun-fact-1a)
&gt;&gt;  CL uses ; and #|...|# in comments.
=&gt;  NIL
 #| (defun mention-fun-fact-1b ()
      (format t &quot;CL uses ; and #|...|# in comments.&quot;)) |#
 (fboundp 'mention-fun-fact-1b) =&gt;  NIL

;;; In this example, vertical-bar followed by sharpsign needed to appear
;;; in a string without any matching sharpsign followed by vertical-bar
;;; having preceded this.  To compensate, the programmer has included a
;;; slash separating the two characters.  In case 2a, the slash is 
;;; unnecessary but harmless, but in case 2b, the slash is critical to
;;; allowing the outer #| ... |# pair match.  If the slash were not present,
;;; the outer comment would terminate prematurely.
 (defun mention-fun-fact-2a ()
   (format t &quot;Don't use |\# unmatched or you'll get in trouble!&quot;))
=&gt;  MENTION-FUN-FACT-2A
 (mention-fun-fact-2a)
&gt;&gt;  Don't use |# unmatched or you'll get in trouble!
=&gt;  NIL
 #| (defun mention-fun-fact-2b ()
      (format t &quot;Don't use |\# unmatched or you'll get in trouble!&quot;) |#
 (fboundp 'mention-fun-fact-2b) =&gt;  NIL

;;; In this example, the programmer attacks the mismatch problem in a
;;; different way.  The sharpsign vertical bar in the comment is not needed
;;; for the correct parsing of the program normally (as in case 3a), but 
;;; becomes important to avoid premature termination of a comment when such 
;;; a program is commented out (as in case 3b).
 (defun mention-fun-fact-3a () ; #|
   (format t &quot;Don't use |# unmatched or you'll get in trouble!&quot;))
=&gt;  MENTION-FUN-FACT-3A
 (mention-fun-fact-3a)
&gt;&gt;  Don't use |# unmatched or you'll get in trouble!
=&gt;  NIL
 #|
 (defun mention-fun-fact-3b () ; #|
   (format t &quot;Don't use |# unmatched or you'll get in trouble!&quot;))
 |#
 (fboundp 'mention-fun-fact-3b) =&gt;  NIL
</PRE>
</b> <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
