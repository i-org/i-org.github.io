<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Macro PROG, PROG*</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="m_nth_va.htm">
<LINK REL=UP HREF="c_data_a.htm">
<LINK REL=NEXT HREF="m_prog1c.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="m_nth_va.htm">◀</A><A REL=UP HREF="c_data_a.htm">▲</A><A REL=NEXT HREF="m_prog1c.htm">▶</A></H1>

<HR>

<A NAME="prog"><A NAME="progST"><I>Macro</I> <B>PROG, PROG*</B></A></A> <P>
 <P>
<p><b>●语法设定:</b><p>
 <P>

<B>prog</B> <I>({<I>var</I> | (<I>var</I> [<I>init-form</I>])}*) <I>declaration</I><B>*</B> {<I>tag</I> | <I>statement</I>}*</I><P> =&gt; <I><I>result</I><B>*</B></I><P>
 <P>

<B>prog*</B> <I>({<I>var</I> | (<I>var</I> [<I>init-form</I>])}*) <I>declaration</I><B>*</B> {<I>tag</I> | <I>statement</I>}*</I><P> =&gt; <I><I>result</I><B>*</B></I><P>
 <P>
<p><b>●参数和值:</b><P>
 <P>
<I>var</I>---variable name. <P>
<I>init-form</I>---a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <P>
<I>declaration</I>---a <A REL=DEFINITION HREF="s_declar.htm#declare"><B>declare</B></A> <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A>; not evaluated. <P>
<I>tag</I>---a <A REL=DEFINITION HREF="26_glo_g.htm#go_tag"><I>go tag</I></A>; not evaluated. <P>
<I>statement</I>---a <A REL=DEFINITION HREF="26_glo_c.htm#compound_form"><I>compound form</I></A>; evaluated as described below. <P>
<I>results</I>---<A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> if a <A REL=DEFINITION HREF="26_glo_n.htm#normal_return"><I>normal return</I></A> occurs, or else, if an <A REL=DEFINITION HREF="26_glo_e.htm#explicit_return"><I>explicit return</I></A> occurs, the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A> that were transferred. <P>
<p><b>●详情:</b><P>
 <P>
Three distinct operations are performed by <A REL=DEFINITION HREF="#prog"><B>prog</B></A> and <A REL=DEFINITION HREF="#progST"><B>prog*</B></A>: they bind local variables, they permit use of the <A REL=DEFINITION HREF="m_return.htm#return"><B>return</B></A> statement, and they permit use of the <A REL=DEFINITION HREF="s_go.htm#go"><B>go</B></A> statement. A typical <A REL=DEFINITION HREF="#prog"><B>prog</B></A> looks like this: <P>
<PRE>
 (prog (var1 var2 (var3 init-form-3) var4 (var5 init-form-5))
       declaration*
       statement1
  tag1
       statement2
       statement3
       statement4
  tag2
       statement5
       ...
       )
</PRE>
</b> <P>
For <A REL=DEFINITION HREF="#prog"><B>prog</B></A>, <I>init-forms</I> are evaluated first, in the order in which they are supplied. The <I>vars</I> are then bound to the corresponding values in parallel. If no <I>init-form</I> is supplied for a given <I>var</I>, that <I>var</I> is bound to <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
The body of <A REL=DEFINITION HREF="#prog"><B>prog</B></A> is executed as if it were a <A REL=DEFINITION HREF="s_tagbod.htm#tagbody"><B>tagbody</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>; the <A REL=DEFINITION HREF="s_go.htm#go"><B>go</B></A> statement can be used to transfer control to a <I>tag</I>. <I>Tags</I> label <I>statements</I>. <P>
<A REL=DEFINITION HREF="#prog"><B>prog</B></A> implicitly establishes a <A REL=DEFINITION HREF="s_block.htm#block"><B>block</B></A> named <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> around the entire <A REL=DEFINITION HREF="#prog"><B>prog</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>, so that <A REL=DEFINITION HREF="m_return.htm#return"><B>return</B></A> can be used at any time to exit from the <A REL=DEFINITION HREF="#prog"><B>prog</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <P>
The difference between <A REL=DEFINITION HREF="#progST"><B>prog*</B></A> and <A REL=DEFINITION HREF="#prog"><B>prog</B></A> is that in <A REL=DEFINITION HREF="#progST"><B>prog*</B></A> the <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>binding</I></A> and initialization of the <I>vars</I> is done <A REL=DEFINITION HREF="26_glo_s.htm#sequentially"><I>sequentially</I></A>, so that the <I>init-form</I> for each one can use the values of previous ones. <P>
<p><b>●例子:</b><P>
 
<PRE>
(prog* ((y z) (x (car y)))
       (return x))
</PRE>
</b> returns the <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> of the value of <b>z</b>. <P>
<PRE>
 (setq a 1) =&gt;  1
 (prog ((a 2) (b a)) (return (if (= a b) '= '/=))) =&gt;  /=
 (prog* ((a 2) (b a)) (return (if (= a b) '= '/=))) =&gt;  =
 (prog () 'no-return-value) =&gt;  NIL
</PRE>
</b> 
<PRE>
 (defun king-of-confusion (w)
   &quot;Take a cons of two lists and make a list of conses.
    Think of this function as being like a zipper.&quot;
   (prog (x y z)          ;Initialize x, y, z to NIL
        (setq y (car w) z (cdr w))
    loop
        (cond ((null y) (return x))
              ((null z) (go err)))
    rejoin
        (setq x (cons (cons (car y) (car z)) x))
        (setq y (cdr y) z (cdr z))
        (go loop)
    err
        (cerror &quot;Will self-pair extraneous items&quot;
                &quot;Mismatch - gleep!  ~S&quot; y)
        (setq z y)
        (go rejoin))) =&gt;  KING-OF-CONFUSION 
</PRE>
</b> This can be accomplished more perspicuously as follows: <P>
<PRE>
 (defun prince-of-clarity (w)
   &quot;Take a cons of two lists and make a list of conses.
    Think of this function as being like a zipper.&quot;
   (do ((y (car w) (cdr y))
        (z (cdr w) (cdr z))
        (x '<b>()</b> (cons (cons (car y) (car z)) x)))
       ((null y) x)
     (when (null z)
       (cerror &quot;Will self-pair extraneous items&quot;
              &quot;Mismatch - gleep!  ~S&quot; y)
       (setq z y)))) =&gt;  PRINCE-OF-CLARITY 
</PRE>
</b> <P>
<p><b>●受制于：</b> 无。</p>
 <P>
<p><b>●例外情况：</b> 无。</p>
 <P>
<p><b>●更多信息:</b><P>
 <P>
<A REL=DEFINITION HREF="s_block.htm#block"><B>block</B></A>, <A REL=DEFINITION HREF="s_let_l.htm#let"><B>let</B></A>, <A REL=DEFINITION HREF="s_tagbod.htm#tagbody"><B>tagbody</B></A>, <A REL=DEFINITION HREF="s_go.htm#go"><B>go</B></A>, <A REL=DEFINITION HREF="m_return.htm#return"><B>return</B></A>, <h2><A REL=CHILD HREF="03_a.htm">Section 3.1 (Evaluation)</A> <P>
<p><b>●说明:</b><P>
 <A REL=DEFINITION HREF="#prog"><B>prog</B></A> can be explained in terms of <A REL=DEFINITION HREF="s_block.htm#block"><B>block</B></A>, <A REL=DEFINITION HREF="s_let_l.htm#let"><B>let</B></A>, and <A REL=DEFINITION HREF="s_tagbod.htm#tagbody"><B>tagbody</B></A> as follows: <P>
<PRE>
 (prog variable-list declaration . body)
    ==  (block nil (let variable-list declaration (tagbody . body)))
</PRE>
</b> <P>
 <P>
<p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss097.htm">DECLS-AND-DOC</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
