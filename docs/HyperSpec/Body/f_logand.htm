<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Function LOGAND, LOGANDC1, LOGANDC2...</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="v_b_1_b.htm">
<LINK REL=UP HREF="c_number.htm">
<LINK REL=NEXT HREF="f_logbtp.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="v_b_1_b.htm">◀</A><A REL=UP HREF="c_number.htm">▲</A><A REL=NEXT HREF="f_logbtp.htm">▶</A></H1>

<HR>

<A NAME="logand"><A NAME="logandc1"><A NAME="logandc2"><A NAME="logeqv"><A NAME="logior"><A NAME="lognand"><A NAME="lognor"><A NAME="lognot"><A NAME="logorc1"><A NAME="logorc2"><A NAME="logxor"><I>Function</I> <B>LOGAND, LOGANDC1, LOGANDC2, LOGEQV, LOGIOR, LOGNAND, LOGNOR, LOGNOT, LOGORC1, LOGORC2, LOGXOR</B></A></A></A></A></A></A></A></A></A></A></A> <P>
<p><b>●语法设定:</b><p>
 <P>

<B>logand</B> <I><b>&amp;rest</b> integers</I> =&gt; <I>result-integer</I><P>
 
<B>logandc1</B> <I>integer-1 integer-2</I> =&gt; <I>result-integer</I><P>
 
<B>logandc2</B> <I>integer-1 integer-2</I> =&gt; <I>result-integer</I><P>
 
<B>logeqv</B> <I><b>&amp;rest</b> integers</I> =&gt; <I>result-integer</I><P>
 
<B>logior</B> <I><b>&amp;rest</b> integers</I> =&gt; <I>result-integer</I><P>
 
<B>lognand</B> <I>integer-1 integer-2</I> =&gt; <I>result-integer</I><P>
 
<B>lognor</B> <I>integer-1 integer-2</I> =&gt; <I>result-integer</I><P>
 
<B>lognot</B> <I>integer</I> =&gt; <I>result-integer</I><P>
 
<B>logorc1</B> <I>integer-1 integer-2</I> =&gt; <I>result-integer</I><P>
 
<B>logorc2</B> <I>integer-1 integer-2</I> =&gt; <I>result-integer</I><P>
 
<B>logxor</B> <I><b>&amp;rest</b> integers</I> =&gt; <I>result-integer</I><P>
 <P>
<p><b>●参数和值:</b><P>
 <P>
<I>integers</I>---<A REL=DEFINITION HREF="26_glo_i.htm#integer"><I>integers</I></A>. <P>
<I>integer</I>---an <A REL=DEFINITION HREF="26_glo_i.htm#integer"><I>integer</I></A>. <P>
<I>integer-1</I>---an <A REL=DEFINITION HREF="26_glo_i.htm#integer"><I>integer</I></A>. <P>
<I>integer-2</I>---an <A REL=DEFINITION HREF="26_glo_i.htm#integer"><I>integer</I></A>. <P>
<I>result-integer</I>---an <A REL=DEFINITION HREF="26_glo_i.htm#integer"><I>integer</I></A>. <P>
<p><b>●详情:</b><P>
 <P>
The <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>functions</I></A> <A REL=DEFINITION HREF="#logandc1"><B>logandc1</B></A>, <A REL=DEFINITION HREF="#logandc2"><B>logandc2</B></A>, <A REL=DEFINITION HREF="#logand"><B>logand</B></A>, <A REL=DEFINITION HREF="#logeqv"><B>logeqv</B></A>, <A REL=DEFINITION HREF="#logior"><B>logior</B></A>, <A REL=DEFINITION HREF="#lognand"><B>lognand</B></A>, <A REL=DEFINITION HREF="#lognor"><B>lognor</B></A>, <A REL=DEFINITION HREF="#lognot"><B>lognot</B></A>, <A REL=DEFINITION HREF="#logorc1"><B>logorc1</B></A>, <A REL=DEFINITION HREF="#logorc2"><B>logorc2</B></A>, and <A REL=DEFINITION HREF="#logxor"><B>logxor</B></A> perform bit-wise logical operations on their <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A>, that are treated as if they were binary. <P>
The next figure lists the meaning of each of the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>functions</I></A>. Where an `identity' is shown, it indicates the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> <I>yielded</I> by the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> when no <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> are supplied. <P>
<PRE>
Function  Identity  Operation performed                         
<A REL=DEFINITION HREF="#logandc1">logandc1</A>  ---       and complement of integer-1 with integer-2  
<A REL=DEFINITION HREF="#logandc2">logandc2</A>  ---       and integer-1 with complement of integer-2  
<A REL=DEFINITION HREF="#logand">logand</A>    -1        and                                         
<A REL=DEFINITION HREF="#logeqv">logeqv</A>    -1        equivalence (exclusive nor)                 
<A REL=DEFINITION HREF="#logior">logior</A>    0         inclusive or                                
<A REL=DEFINITION HREF="#lognand">lognand</A>   ---       complement of integer-1 and integer-2       
<A REL=DEFINITION HREF="#lognor">lognor</A>    ---       complement of integer-1 or integer-2        
<A REL=DEFINITION HREF="#lognot">lognot</A>    ---       complement                                  
<A REL=DEFINITION HREF="#logorc1">logorc1</A>   ---       or complement of integer-1 with integer-2   
<A REL=DEFINITION HREF="#logorc2">logorc2</A>   ---       or integer-1 with complement of integer-2   
<A REL=DEFINITION HREF="#logxor">logxor</A>    0         exclusive or                                
</PRE>
<p><b>■图表 12-18.  Bit-wise Logical Operations on Integers</B> <P>
Negative <I>integers</I> are treated as if they were in two's-complement notation. <P>
<p><b>●例子:</b><P>
 <P>
<PRE>
 (logior 1 2 4 8) =&gt;  15
 (logxor 1 3 7 15) =&gt;  10
 (logeqv) =&gt;  -1
 (logand 16 31) =&gt;  16
 (lognot 0) =&gt;  -1
 (lognot 1) =&gt;  -2
 (lognot -1) =&gt;  0
 (lognot (1+ (lognot 1000))) =&gt;  999

;;; In the following example, m is a mask.  For each bit in
;;; the mask that is a 1, the corresponding bits in x and y are
;;; exchanged.  For each bit in the mask that is a 0, the 
;;; corresponding bits of x and y are left unchanged.
 (flet ((show (m x y)
          (format t &quot;~%m = #o~6,'0O~%x = #o~6,'0O~%y = #o~6,'0O~%&quot;
                  m x y)))
   (let ((m #o007750)
         (x #o452576)
         (y #o317407))
     (show m x y)
     (let ((z (logand (logxor x y) m)))
       (setq x (logxor z x))
       (setq y (logxor z y))
       (show m x y))))
&gt;&gt;  m = #o007750
&gt;&gt;  x = #o452576
&gt;&gt;  y = #o317407
&gt;&gt;  
&gt;&gt;  m = #o007750
&gt;&gt;  x = #o457426
&gt;&gt;  y = #o312557
=&gt;  NIL
</PRE>
</b> <P>
<p><b>●副作用:</b> None.
 <P>
<p><b>●受制于：</b> 无。</p>
 <P>
<p><b>●例外情况：</b><P>
 <P>
Should signal <A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A> if any argument is not an <A REL=DEFINITION HREF="26_glo_i.htm#integer"><I>integer</I></A>. <P>
<p><b>●更多信息:</b><P>
 <P>
<A REL=DEFINITION HREF="f_boole.htm#boole"><B>boole</B></A> <P>
<p><b>●说明:</b><P>
 <P>
<b>(logbitp </b><I>k</I><b> -1)</b> returns <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> for all values of <I>k</I>. <P>
Because the following functions are not associative, they take exactly two arguments rather than any number of arguments. <P>
<PRE>
 (lognand n1 n2) ==  (lognot (logand n1 n2))
 (lognor n1 n2) ==  (lognot (logior n1 n2))
 (logandc1 n1 n2) ==  (logand (lognot n1) n2)
 (logandc2 n1 n2) ==  (logand n1 (lognot n2))
 (logiorc1 n1 n2) ==  (logior (lognot n1) n2)
 (logiorc2 n1 n2) ==  (logior n1 (lognot n2))
 (logbitp j (lognot x)) ==  (not (logbitp j x))
</PRE>
</b> <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
