<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 22.3.5.2</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="22_cea.htm">
<LINK REL=UP HREF="22_ce.htm">
<LINK REL=NEXT HREF="22_cec.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="22_cea.htm">◀</A><A REL=UP HREF="22_ce.htm">▲</A><A REL=NEXT HREF="22_cec.htm">▶</A></H1>

<HR>

<H2>
22.3.5.2 Tilde Less-Than-Sign: Logical Block</H2>   <P>
<b>~&lt;...~:&gt;</b> <P>
If <b>~:&gt;</b> is used to terminate a <b>~&lt;...~&gt;</b>, the directive is equivalent to a call to <A REL=DEFINITION HREF="m_ppr_lo.htm#pprint-logical-block"><B>pprint-logical-block</B></A>. The argument corresponding to the <b>~&lt;...~:&gt;</b> directive is treated in the same way as the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> argument to <A REL=DEFINITION HREF="m_ppr_lo.htm#pprint-logical-block"><B>pprint-logical-block</B></A>, thereby providing automatic support for non-<A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> arguments and the detection of circularity, sharing, and depth abbreviation. The portion of the <I>control-string</I> nested within the <b>~&lt;...~:&gt;</b> specifies the <b>:prefix</b> (or <b>:per-line-prefix</b>), <b>:suffix</b>, and body of the <A REL=DEFINITION HREF="m_ppr_lo.htm#pprint-logical-block"><B>pprint-logical-block</B></A>. <P>
The <I>control-string</I> portion enclosed by <b>~&lt;...~:&gt;</b> can be divided into segments <b>~&lt;</b><I>prefix</I><b>~;</b><I>body</I><b>~;</b><I>suffix</I><b>~:&gt;</b> by <b>~;</b> directives. If the first section is terminated by <b>~@;</b>, it specifies a per-line prefix rather than a simple prefix. The <I>prefix</I> and <I>suffix</I> cannot contain format directives. An error is signaled if either the prefix or suffix fails to be a constant string or if the enclosed portion is divided into more than three segments. <P>
If the enclosed portion is divided into only two segments, the <I>suffix</I> defaults to the null string. If the enclosed portion consists of only a single segment, both the <I>prefix</I> and the <I>suffix</I> default to the null string. If the <A REL=DEFINITION HREF="26_glo_c.htm#colon"><I>colon</I></A> modifier is used (i.e., <b>~:&lt;...~:&gt;</b>), the <I>prefix</I> and <I>suffix</I> default to <b>&quot;(&quot;</b> and <b>&quot;)&quot;</b> (respectively) instead of the null string. <P>
The body segment can be any arbitrary <A REL=DEFINITION HREF="26_glo_f.htm#format_string"><I>format string</I></A>. This <A REL=DEFINITION HREF="26_glo_f.htm#format_string"><I>format string</I></A> is applied to the elements of the list corresponding to the <b>~&lt;...~:&gt;</b> directive as a whole. Elements are extracted from this list using <A REL=DEFINITION HREF="m_ppr_po.htm#pprint-pop"><B>pprint-pop</B></A>, thereby providing automatic support for malformed lists, and the detection of circularity, sharing, and length abbreviation. Within the body segment, <b>~^</b> acts like <A REL=DEFINITION HREF="m_ppr_ex.htm#pprint-exit-if-list-exhausted"><B>pprint-exit-if-list-exhausted</B></A>. <P>
<b>~&lt;...~:&gt;</b> supports a feature not supported by <A REL=DEFINITION HREF="m_ppr_lo.htm#pprint-logical-block"><B>pprint-logical-block</B></A>. If <b>~:@&gt;</b> is used to terminate the directive (i.e., <b>~&lt;...~:@&gt;</b>), then a fill-style conditional newline is automatically inserted after each group of blanks immediately contained in the body (except for blanks after a  &lt;Newline&gt; directive). This makes it easy to achieve the equivalent of paragraph filling. <P>
If the <A REL=DEFINITION HREF="26_glo_a.htm#at-sign"><I>at-sign</I></A> modifier is used with <b>~&lt;...~:&gt;</b>, the entire remaining argument list is passed to the directive as its argument. All of the remaining arguments are always consumed by <b>~@&lt;...~:&gt;</b>, even if they are not all used by the <A REL=DEFINITION HREF="26_glo_f.htm#format_string"><I>format string</I></A> nested in the directive. Other than the difference in its argument, <b>~@&lt;...~:&gt;</b> is exactly the same as <b>~&lt;...~:&gt;</b> except that circularity detection is not applied if <b>~@&lt;...~:&gt;</b> is encountered at top level in a <A REL=DEFINITION HREF="26_glo_f.htm#format_string"><I>format string</I></A>. This ensures that circularity detection is applied only to data lists, not to <A REL=DEFINITION HREF="26_glo_f.htm#format_argument"><I>format argument</I></A> <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>lists</I></A>. <P>
<b>&quot; . #</b><I>n</I><b>#&quot;</b> is printed if circularity or sharing has to be indicated for its argument as a whole. <P>
To a considerable extent, the basic form of the directive <b>~&lt;...~&gt;</b> is incompatible with the dynamic control of the arrangement of output by <b>~W</b>, <b>~_</b>, <b>~&lt;...~:&gt;</b>, <b>~I</b>, and <b>~:T</b>. As a result, an error is signaled if any of these directives is nested within <b>~&lt;...~&gt;</b>. Beyond this, an error is also signaled if the <b>~&lt;...~:;...~&gt;</b> form of <b>~&lt;...~&gt;</b> is used in the same <A REL=DEFINITION HREF="26_glo_f.htm#format_string"><I>format string</I></A> with <b>~W</b>, <b>~_</b>, <b>~&lt;...~:&gt;</b>, <b>~I</b>, or <b>~:T</b>. <P>
See also <h2><A REL=CHILD HREF="22_cfb.htm">Section 22.3.6.2 (Tilde Less-Than-Sign: Justification)</A>. <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
