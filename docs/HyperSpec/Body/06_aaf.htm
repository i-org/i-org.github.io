<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 6.1.1.6</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="06_aaef.htm">
<LINK REL=UP HREF="06_aa.htm">
<LINK REL=NEXT HREF="06_aag.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="06_aaef.htm">◀</A><A REL=UP HREF="06_aa.htm">▲</A><A REL=NEXT HREF="06_aag.htm">▶</A></H1>

<HR>

<H2>
6.1.1.6 Order of Execution</H2> <P>
  With the exceptions listed below, clauses are executed in the loop body in the order in which they appear in the source. Execution is repeated until a clause terminates the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> or until a <A REL=DEFINITION HREF="m_return.htm#return"><B>return</B></A>, <A REL=DEFINITION HREF="s_go.htm#go"><B>go</B></A>, or <A REL=DEFINITION HREF="s_throw.htm#throw"><B>throw</B></A> form is encountered which transfers control to a point outside of the loop. The following actions are exceptions to the linear order of execution: <P>
<P><ul><P>
<li>*  All variables are initialized first, regardless of where the establishing clauses appear in the source. The order of initialization follows the order of these clauses. <P></li>
<li>*  The code for any <b>initially</b> clauses is collected into one <A REL=DEFINITION HREF="s_progn.htm#progn"><B>progn</B></A> in the order in which the clauses appear in the source. The collected code is executed once in the loop prologue after any implicit variable initializations. <P></li>
<li>*  The code for any <b>finally</b> clauses is collected into one <A REL=DEFINITION HREF="s_progn.htm#progn"><B>progn</B></A> in the order in which the clauses appear in the source. The collected code is executed once in the loop epilogue before any implicit values from the accumulation clauses are returned. Explicit returns anywhere in the source, however, will exit the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> without executing the epilogue code. <P></li>
<li>*  A <b>with</b> clause introduces a variable <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>binding</I></A> and an optional initial value. The initial values are calculated in the order in which the <b>with</b> clauses occur. <P></li>
<li>*  Iteration control clauses implicitly perform the following actions: <P></li>
<P><ul><li>--  initialize variables; <P></li>
<li>--  <A REL=DEFINITION HREF="26_glo_s.htm#step"><I>step</I></A> variables, generally between each execution of the loop body; <P></li>
<li>--  perform termination tests, generally just before the execution of the loop body. <P></li>
 <P></ul><P></ul><P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
