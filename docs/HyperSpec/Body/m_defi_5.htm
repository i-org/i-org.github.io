<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Macro DEFINE-CONDITION</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="m_ignore.htm">
<LINK REL=UP HREF="c_condit.htm">
<LINK REL=NEXT HREF="f_mk_cnd.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="m_ignore.htm">◀</A><A REL=UP HREF="c_condit.htm">▲</A><A REL=NEXT HREF="f_mk_cnd.htm">▶</A></H1>

<HR>

<A NAME="define-condition"><I>Macro</I> <B>DEFINE-CONDITION</B></A> <P>
 <P>
 <P>
<p><b>●语法设定:</b><p>
 <P>

<B>define-condition</B> <I>name (<I>parent-type</I><B>*</B>) ({<I>slot-spec</I>}<B>*</B>) <I>option</I><B>*</B></I><P> =&gt; <I>name</I><P>
 <P>
<PRE>
slot-spec::= slot-name | (slot-name slot-option) 
</PRE>
 <PRE>
slot-option::= [[{:reader <A REL=DEFINITION HREF="26_glo_s.htm#symbol">symbol</A>}* |  
               {:writer function-name}* |  
               {:accessor <A REL=DEFINITION HREF="26_glo_s.htm#symbol">symbol</A>}* |  
               {:allocation allocation-type} |  
               {:initarg <A REL=DEFINITION HREF="26_glo_s.htm#symbol">symbol</A>}* |  
               {:initform <A REL=DEFINITION HREF="26_glo_f.htm#form">form</A>} |  
               {:type type-specifier} ]] 
</PRE>
 <PRE>
option::= [[(:default-initargs . initarg-list) |  
          (:documentation <A REL=DEFINITION HREF="26_glo_s.htm#string">string</A>) |  
          (:report report-name) ]] 
</PRE>
 <PRE>
function-name::= {<A REL=DEFINITION HREF="26_glo_s.htm#symbol">symbol</A> | (setf <A REL=DEFINITION HREF="26_glo_s.htm#symbol">symbol</A>)} 
</PRE>
 <PRE>
allocation-type::= :instance | :class 
</PRE>
 <PRE>
report-name::= <A REL=DEFINITION HREF="26_glo_s.htm#string">string</A> | <A REL=DEFINITION HREF="26_glo_s.htm#symbol">symbol</A> | <A REL=DEFINITION HREF="26_glo_l.htm#lambda_expression">lambda expression</A> 
</PRE>
 <P>
<p><b>●参数和值:</b><P>
 <P>
<I>name</I>---a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>. <P>
<I>parent-type</I>---a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> naming a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A>. If no <I>parent-types</I> are supplied, the <I>parent-types</I> default to <b>(condition)</b>. <P>
<I>default-initargs</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of <A REL=DEFINITION HREF="26_glo_k.htm#keywordSLvalue_pair"><I>keyword/value pairs</I></A>. <P>
  <P>
<I>Slot-spec</I> -- the <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> of a <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> or a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> consisting of the <I>slot-name</I> followed by zero or more <I>slot-options</I>. <P>
<I>Slot-name</I> -- a slot name (a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>), the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of a slot name, or the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of slot name/slot form pairs. <P>
<I>Option</I> -- Any of the following: <P>
<P><ul><P>
<li><b>:reader</b>  <P></li>
<b>:reader</b> can be supplied more than once for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> and cannot be <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<li><b>:writer</b>  <P></li>
<b>:writer</b> can be supplied more than once for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> and must name a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. <P>
<li><b>:accessor</b>  <P></li>
<b>:accessor</b> can be supplied more than once for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> and cannot be <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<li><b>:allocation</b>  <P></li>
<b>:allocation</b> can be supplied once at most for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. The default if <b>:allocation</b> is not supplied is <b>:instance</b>. <P>
<li><b>:initarg</b>  <P></li>
<b>:initarg</b> can be supplied more than once for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
<li><b>:initform</b>  <P></li>
<b>:initform</b> can be supplied once at most for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
<li><b>:type</b>  <P></li>
<b>:type</b> can be supplied once at most for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
<li><b>:documentation</b>  <P></li>
<b>:documentation</b> can be supplied once at most for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
<li><b>:report</b>  <P></li>
<b>:report</b> can be supplied once at most. <P>
<P></ul> <P>
<p><b>●详情:</b><P>
 <P>
<A REL=DEFINITION HREF="#define-condition"><B>define-condition</B></A> defines a new condition type called <I>name</I>, which is a <A REL=DEFINITION HREF="26_glo_s.htm#subtype"><I>subtype</I></A> of  the <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> or <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>types</I></A> named by <I>parent-type</I>. Each <I>parent-type</I> argument specifies a direct <A REL=DEFINITION HREF="26_glo_s.htm#supertype"><I>supertype</I></A> of the new <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A>. The new <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> inherits <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> and <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> from each of its direct <A REL=DEFINITION HREF="26_glo_s.htm#supertype"><I>supertypes</I></A>, and so on.  <P>
 If a slot name/slot form pair is supplied, the slot form is a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> that can be evaluated by <A REL=DEFINITION HREF="f_mk_cnd.htm#make-condition"><B>make-condition</B></A> to produce a default value when an explicit value is not provided. If no slot form is supplied, the contents of the <I>slot</I> is initialized in an <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent"><I>implementation-dependent</I></A> way. <P>
 If the <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> being defined and some other <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> from which it inherits have a slot by the same name, only one slot is allocated in the <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A>, but the supplied slot form overrides any slot form that might otherwise have been inherited from a <I>parent-type</I>. If no slot form is supplied, the inherited slot form (if any) is still visible. <P>
Accessors are created according to the same rules as used by <A REL=DEFINITION HREF="m_defcla.htm#defclass"><B>defclass</B></A>. <P>
A description of <I>slot-options</I> follows: <P>
 <P>
<P><ul><P>
<li><b>:reader</b>  <P></li>
The <b>:reader</b> slot option specifies that an <A REL=DEFINITION HREF="26_glo_u.htm#unqualified_method"><I>unqualified method</I></A> is to be defined on the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> named by the argument to <b>:reader</b> to read the value of the given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
<li>*  The <b>:initform</b> slot option is used to provide a default initial value form to be used in the initialization of the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. This <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is evaluated every time it is used to initialize the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. The <A REL=DEFINITION HREF="26_glo_l.htm#lexical_environment"><I>lexical environment</I></A> in which this <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is evaluated is the lexical <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A> in which the <A REL=DEFINITION HREF="#define-condition"><B>define-condition</B></A> form was evaluated. Note that the <A REL=DEFINITION HREF="26_glo_l.htm#lexical_environment"><I>lexical environment</I></A> refers both to variables and to <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>functions</I></A>. For <A REL=DEFINITION HREF="26_glo_l.htm#local_slot"><I>local slots</I></A>, the <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_environment"><I>dynamic environment</I></A> is the dynamic <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A> in which <A REL=DEFINITION HREF="f_mk_cnd.htm#make-condition"><B>make-condition</B></A> was called; for <A REL=DEFINITION HREF="26_glo_s.htm#shared_slot"><I>shared slots</I></A>, the <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_environment"><I>dynamic environment</I></A> is the <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_environment"><I>dynamic environment</I></A> in which the <A REL=DEFINITION HREF="#define-condition"><B>define-condition</B></A> form was evaluated. <P></li>
 No implementation is permitted to extend the syntax of <A REL=DEFINITION HREF="#define-condition"><B>define-condition</B></A> to allow <b>(</b><I>slot-name</I><b> </b><I>form</I><b>)</b> as an abbreviation for <b>(</b><I>slot-name</I><b> :initform </b><I>form</I><b>)</b>. <P>
<li><b>:initarg</b>  <P></li>
The <b>:initarg</b> slot option declares an initialization argument named by its <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> argument and specifies that this initialization argument initializes the given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. If the initialization argument has a value in the call to <A REL=DEFINITION HREF="f_init_i.htm#initialize-instance"><B>initialize-instance</B></A>, the value is stored into the given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>, and the slot's <b>:initform</b> slot option, if any, is not evaluated. If none of the initialization arguments specified for a given <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> has a value, the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> is initialized according to the <b>:initform</b> slot option, if specified. <P>
<li><b>:type</b>  <P></li>
The <b>:type</b> slot option specifies that the contents of the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> is always of the specified <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A>. It effectively declares the result type of the reader generic function when applied to an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> of this <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> type. The consequences of attempting to store in a <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> a value that does not satisfy the type of the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> is undefined. <P>
<li><b>:default-initargs</b>  <P></li>
 This option is treated the same as it would be <A REL=DEFINITION HREF="m_defcla.htm#defclass"><B>defclass</B></A>. <P>
<li><b>:documentation</b>  <P></li>
 The <b>:documentation</b> slot option provides a <A REL=DEFINITION HREF="26_glo_d.htm#documentation_string"><I>documentation string</I></A> for the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
 <li><b>:report</b>  <P></li>
 <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>Condition</I></A> reporting is mediated through the <A REL=DEFINITION HREF="f_pr_obj.htm#print-object"><B>print-object</B></A> method for the <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> type in question, with <A REL=DEFINITION HREF="v_pr_esc.htm#STprint-escapeST"><B>*print-escape*</B></A> always being <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. Specifying <b>(:report </b><I>report-name</I><b>)</b> in the definition of a condition type <b>C</b> is equivalent to: <P>
<PRE>
 (defmethod print-object ((x c) stream)
   (if *print-escape* (call-next-method) (report-name x stream)))
</PRE>
</b> <P>
 If the value supplied by the argument to <b>:report</b> (<I>report-name</I>) is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> or a <A REL=DEFINITION HREF="26_glo_l.htm#lambda_expression"><I>lambda expression</I></A>, it must be acceptable to <A REL=DEFINITION HREF="s_fn.htm#function"><B>function</B></A>. <b>(function </b><I>report-name</I><b>)</b> is evaluated in the current <A REL=DEFINITION HREF="26_glo_l.htm#lexical_environment"><I>lexical environment</I></A>. It should return a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two arguments, a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> and a <A REL=DEFINITION HREF="26_glo_s.htm#stream"><I>stream</I></A>, that prints on the <A REL=DEFINITION HREF="26_glo_s.htm#stream"><I>stream</I></A> a description of the <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A>. This <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> is called whenever the <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> is printed while <A REL=DEFINITION HREF="v_pr_esc.htm#STprint-escapeST"><B>*print-escape*</B></A> is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
If <I>report-name</I> is a <A REL=DEFINITION HREF="26_glo_s.htm#string"><I>string</I></A>, it is a shorthand for <P>
<PRE>
 (lambda (condition stream)
   (declare (ignore condition))
   (write-string report-name stream))
</PRE>
</b> <P>
This option is processed after the new <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> type has been defined, so use of the <I>slot</I> accessors within the <b>:report</b> function is permitted. If this option is not supplied, information about how to report this type of <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> is inherited from the <I>parent-type</I>. <P>
<P></ul><P>
The consequences are unspecifed if an attempt is made to <A REL=DEFINITION HREF="26_glo_r.htm#read"><I>read</I></A> a <I>slot</I> that has not been explicitly initialized and that has not been given a default value. <P>
The consequences are unspecified if an attempt is made to assign the <I>slots</I> by using <A REL=DEFINITION HREF="m_setf_.htm#setf"><B>setf</B></A>. <P>
 If a <A REL=DEFINITION HREF="#define-condition"><B>define-condition</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> appears as a <A REL=DEFINITION HREF="26_glo_t.htm#top_level_form"><I>top level form</I></A>, the <A REL=DEFINITION HREF="26_glo_c.htm#compiler"><I>compiler</I></A> must make <I>name</I> recognizable as a valid <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> name, and it must be possible to reference the <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> as the <I>parent-type</I> of another <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> in a subsequent <A REL=DEFINITION HREF="#define-condition"><B>define-condition</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> in the <A REL=DEFINITION HREF="26_glo_f.htm#file"><I>file</I></A> being compiled.  <P>
<p><b>●例子:</b><P>
 <P>
The following form defines a condition of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <b>peg/hole-mismatch</b> which inherits from a condition type called <b>blocks-world-error</b>: <P>
<PRE>
(define-condition peg/hole-mismatch 
                  (blocks-world-error)
                  ((peg-shape  :initarg :peg-shape
                               :reader peg/hole-mismatch-peg-shape)
                   (hole-shape :initarg :hole-shape
                               :reader peg/hole-mismatch-hole-shape))
  (:report (lambda (condition stream)
             (format stream &quot;A ~A peg cannot go in a ~A hole.&quot;
                     (peg/hole-mismatch-peg-shape  condition)
                     (peg/hole-mismatch-hole-shape condition)))))
</PRE>
</b> <P>
The new type has slots <b>peg-shape</b> and <b>hole-shape</b>, so <A REL=DEFINITION HREF="f_mk_cnd.htm#make-condition"><B>make-condition</B></A> accepts <b>:peg-shape</b> and <b>:hole-shape</b> keywords. The <A REL=DEFINITION HREF="26_glo_r.htm#reader"><I>readers</I></A> <b>peg/hole-mismatch-peg-shape</b> and <b>peg/hole-mismatch-hole-shape</b> apply to objects of this type, as illustrated in the <b>:report</b> information. <P>
The following form defines a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> named <b>machine-error</b> which inherits from <A REL=DEFINITION HREF="e_error.htm#error"><B>error</B></A>: <P>
<PRE>
(define-condition machine-error 
                  (error)
                  ((machine-name :initarg :machine-name
                                 :reader machine-error-machine-name))
  (:report (lambda (condition stream)
             (format stream &quot;There is a problem with ~A.&quot;
                     (machine-error-machine-name condition)))))
</PRE>
</b> <P>
Building on this definition, a new error condition can be defined which is a subtype of <b>machine-error</b> for use when machines are not available: <P>
<PRE>
(define-condition machine-not-available-error (machine-error) ()
  (:report (lambda (condition stream)
             (format stream &quot;The machine ~A is not available.&quot;
                     (machine-error-machine-name condition)))))
</PRE>
</b> <P>
This defines a still more specific condition, built upon <b>machine-not-available-error</b>, which provides a slot initialization form for <b>machine-name</b> but which does not provide any new slots or report information. It just gives the <b>machine-name</b> slot a default initialization: <P>
<PRE>
(define-condition my-favorite-machine-not-available-error
                  (machine-not-available-error)
  ((machine-name :initform &quot;mc.lcs.mit.edu&quot;)))
</PRE>
</b> <P>
Note that since no <b>:report</b> clause was given, the information inherited from <b>machine-not-available-error</b> is used to report this type of condition. <P>
<PRE>
 (define-condition ate-too-much (error) 
     ((person :initarg :person :reader ate-too-much-person)
      (weight :initarg :weight :reader ate-too-much-weight)
      (kind-of-food :initarg :kind-of-food
                    :reader :ate-too-much-kind-of-food)))
=&gt;  ATE-TOO-MUCH
 (define-condition ate-too-much-ice-cream (ate-too-much)
   ((kind-of-food :initform 'ice-cream)
    (flavor       :initarg :flavor
                  :reader ate-too-much-ice-cream-flavor
                  :initform 'vanilla ))
   (:report (lambda (condition stream)
              (format stream &quot;~A ate too much ~A ice-cream&quot;
                      (ate-too-much-person condition)
                      (ate-too-much-ice-cream-flavor condition)))))
=&gt;  ATE-TOO-MUCH-ICE-CREAM
 (make-condition 'ate-too-much-ice-cream
                 :person 'fred
                 :weight 300
                 :flavor 'chocolate)
=&gt;  #&lt;ATE-TOO-MUCH-ICE-CREAM 32236101&gt;
 (format t &quot;~A&quot; *)
&gt;&gt;  FRED ate too much CHOCOLATE ice-cream
=&gt;  NIL
</PRE>
</b> <P>
<p><b>●受制于：</b> 无。</p>
 <P>
<p><b>●例外情况：</b> 无。</p>
 <P>
<p><b>●更多信息:</b><P>
 <P>
<A REL=DEFINITION HREF="f_mk_cnd.htm#make-condition"><B>make-condition</B></A>, <A REL=DEFINITION HREF="m_defcla.htm#defclass"><B>defclass</B></A>, <h2><A REL=CHILD HREF="09_a.htm">Section 9.1 (Condition System Concepts)</A> <P>
<p><b>●说明：</b> 无。</p>
 <P>
 <P>
<p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss059.htm">COMPILE-FILE-HANDLING-OF-TOP-LEVEL-FORMS:CLARIFY</A><LI> <A REL=CHILD HREF="../Issues/iss049.htm">CLOS-CONDITIONS:INTEGRATE</A><LI> <A REL=CHILD HREF="../Issues/iss102.htm">DEFINE-CONDITION-SYNTAX:INCOMPATIBLY-MORE-LIKE-DEFCLASS+EMPHASIZE-READ-ONLY</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
