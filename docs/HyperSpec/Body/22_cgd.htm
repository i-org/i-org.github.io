<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 22.3.7.4</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="22_cgc.htm">
<LINK REL=UP HREF="22_cg.htm">
<LINK REL=NEXT HREF="22_cge.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="22_cgc.htm">◀</A><A REL=UP HREF="22_cg.htm">▲</A><A REL=NEXT HREF="22_cge.htm">▶</A></H1>

<HR>

<H2>
22.3.7.4 Tilde Left-Brace: Iteration</H2>  <P>
<b>~{</b><I>str</I><b>~}</b> <P>
This is an iteration construct. The argument should be a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>, which is used as a set of arguments as if for a recursive call to <A REL=DEFINITION HREF="f_format.htm#format"><B>format</B></A>. The <A REL=DEFINITION HREF="26_glo_s.htm#string"><I>string</I></A> <I>str</I> is used repeatedly as the control string. Each iteration can absorb as many elements of the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> as it likes as arguments; if <I>str</I> uses up two arguments by itself, then two elements of the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> will get used up each time around the loop. If before any iteration step the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> is empty, then the iteration is terminated. Also, if a prefix parameter <I>n</I> is given, then there will be at most <I>n</I> repetitions of processing of <I>str</I>. Finally, the <b>~^</b> directive can be used to terminate the iteration prematurely. <P>
For example: <P>
<PRE>
 (format nil &quot;The winners are:~{ ~S~}.&quot; 
         '(fred harry jill)) 
=&gt;  &quot;The winners are: FRED HARRY JILL.&quot;                           
 (format nil &quot;Pairs:~{ &lt;~S,~S&gt;~}.&quot; 
         '(a 1 b 2 c 3))
=&gt;  &quot;Pairs: &lt;A,1&gt; &lt;B,2&gt; &lt;C,3&gt;.&quot;
</PRE>
</b> <P>
<b>~:</b>{<b></b><I>str</I><b>~</b>}<b></b> is similar, but the argument should be a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of sublists. At each repetition step, one sublist is used as the set of arguments for processing <I>str</I>; on the next repetition, a new sublist is used, whether or not all of the last sublist had been processed. For example: <P>
 
<PRE>
 (format nil &quot;Pairs:~:{ &lt;~S,~S&gt;~} .&quot; 
                 '((a 1) (b 2) (c 3)))
=&gt;  &quot;Pairs: &lt;A,1&gt; &lt;B,2&gt; &lt;C,3&gt;.&quot;
</PRE>
</b> <P>
<b>~@</b>{<b></b><I>str</I><b>~</b>}<b></b> is similar to <b>~</b>{<b></b><I>str</I><b>~</b>}<b></b>, but instead of using one argument that is a list, all the remaining arguments are used as the list of arguments for the iteration. Example: <P>
<PRE>
 (format nil &quot;Pairs:~@{ &lt;~S,~S&gt;~} .&quot; 'a 1 'b 2 'c 3)
=&gt;  &quot;Pairs: &lt;A,1&gt; &lt;B,2&gt; &lt;C,3&gt;.&quot;
</PRE>
</b> If the iteration is terminated before all the remaining arguments are consumed, then any arguments not processed by the iteration remain to be processed by any directives following the iteration construct. <P>
<b>~:@</b>{<b></b><I>str</I><b>~</b>}<b></b> combines the features of <b>~:</b>{<b></b><I>str</I><b>~</b>}<b></b> and <b>~@</b>{<b></b><I>str</I><b>~</b>}<b></b>. All the remaining arguments are used, and each one must be a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>. On each iteration, the next argument is used as a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of arguments to <I>str</I>. Example: <P>
<PRE>
 (format nil &quot;Pairs:~:@{ &lt;~S,~S&gt;~} .&quot; 
              '(a 1) '(b 2) '(c 3)) 
=&gt;  &quot;Pairs: &lt;A,1&gt; &lt;B,2&gt; &lt;C,3&gt;.&quot;
</PRE>
</b> Terminating the repetition construct with <b>~:</b>}<b></b> instead of <b>~</b>}<b></b> forces <I>str</I> to be processed at least once, even if the initial list of arguments is null. However, this will not override an explicit prefix parameter of zero. <P>
If <I>str</I> is empty, then an argument is used as <I>str</I>. It must be a <A REL=DEFINITION HREF="26_glo_f.htm#format_control"><I>format control</I></A> and precede any arguments processed by the iteration. As an example, the following are equivalent: <P>
<PRE>
    (apply #'format stream string arguments)
 ==  (format stream &quot;~1{~:}&quot; string arguments)
</PRE>
</b> <P>
This will use <b>string</b> as a formatting string. The <b>~1</b>{<b></b> says it will be processed at most once, and the <b>~:</b>}<b></b> says it will be processed at least once. Therefore it is processed exactly once, using <b>arguments</b> as the arguments. This case may be handled more clearly by the <b>~?</b> directive, but this general feature of <b>~</b>{<b></b> is more powerful than <b>~?</b>. <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
