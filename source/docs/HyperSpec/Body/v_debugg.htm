<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Variable *DEBUGGER-HOOK*</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_break.htm">
<LINK REL=UP HREF="c_condit.htm">
<LINK REL=NEXT HREF="v_break_.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="f_break.htm">◀</A><A REL=UP HREF="c_condit.htm">▲</A><A REL=NEXT HREF="v_break_.htm">▶</A></H1>

<HR>

<A NAME="STdebugger-hookST"><I>Variable</I> <B>*DEBUGGER-HOOK*</B></A> <P>
<p><b>●值类型:</b><P>
 <P>
a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> (a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> and the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of <A REL=DEFINITION HREF="#STdebugger-hookST"><B>*debugger-hook*</B></A> at the time the debugger was entered), or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<p><b>●初始值:</b><P>
 <P>
<A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<p><b>●详情:</b><P>
 <P>
When the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of <A REL=DEFINITION HREF="#STdebugger-hookST"><B>*debugger-hook*</B></A> is <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A>, it is called prior to normal entry into the debugger, either due to a call to <A REL=DEFINITION HREF="f_invoke.htm#invoke-debugger"><B>invoke-debugger</B></A> or due to automatic entry into the debugger from a call to <A REL=DEFINITION HREF="f_error.htm#error"><B>error</B></A> or <A REL=DEFINITION HREF="f_cerror.htm#cerror"><B>cerror</B></A> with a condition that is not handled. The <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> may either handle the <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> (transfer control) or return normally (allowing the standard debugger to run). To minimize recursive errors while debugging, <A REL=DEFINITION HREF="#STdebugger-hookST"><B>*debugger-hook*</B></A> is bound to <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> by <A REL=DEFINITION HREF="f_invoke.htm#invoke-debugger"><B>invoke-debugger</B></A> prior to calling the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A>. <P>
<p><b>●例子:</b><P>
 <P>
<PRE>
 (defun one-of (choices &amp;optional (prompt &quot;Choice&quot;))
   (let ((n (length choices)) (i))
     (do ((c choices (cdr c)) (i 1 (+ i 1)))
         ((null c))
       (format t &quot;~&amp;[~D] ~A~%&quot; i (car c)))
     (do () ((typep i `(integer 1 ,n)))
       (format t &quot;~&amp;~A: &quot; prompt)
       (setq i (read))
       (fresh-line))
     (nth (- i 1) choices)))

 (defun my-debugger (condition me-or-my-encapsulation)
   (format t &quot;~&amp;Fooey: ~A&quot; condition)
   (let ((restart (one-of (compute-restarts))))
     (if (not restart) (error &quot;My debugger got an error.&quot;))
     (let ((*debugger-hook* me-or-my-encapsulation))
       (invoke-restart-interactively restart))))
 
 (let ((*debugger-hook* #'my-debugger))
   (+ 3 'a))
&gt;&gt;  Fooey: The argument to +, A, is not a number.
&gt;&gt;   [1] Supply a replacement for A.
&gt;&gt;   [2] Return to Cloe Toplevel.
&gt;&gt;  Choice: 1
&gt;&gt;   Form to evaluate and use: (+ 5 'b)
&gt;&gt;   Fooey: The argument to +, B, is not a number.
&gt;&gt;   [1] Supply a replacement for B.
&gt;&gt;   [2] Supply a replacement for A.
&gt;&gt;   [3] Return to Cloe Toplevel.
&gt;&gt;  Choice: 1
&gt;&gt;   Form to evaluate and use: 1
=&gt;  9
</PRE>
</b> <P>
<p><b>●受制于:</b><P>
 <P>
<A REL=DEFINITION HREF="f_invoke.htm#invoke-debugger"><B>invoke-debugger</B></A> <P>
<p><b>●更多信息:</b> None.
 <P>
<p><b>●说明:</b><P>
 <P>
When evaluating code typed in by the user interactively, it is sometimes useful to have the hook function bind <A REL=DEFINITION HREF="#STdebugger-hookST"><B>*debugger-hook*</B></A> to the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> that was its second argument so that recursive errors can be handled using the same interactive facility. <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
