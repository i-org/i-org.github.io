<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 6.1.8.1</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="06_ah.htm">
<LINK REL=UP HREF="06_ah.htm">
<LINK REL=NEXT HREF="06_ai.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="06_ah.htm">◀</A><A REL=UP HREF="06_ah.htm">▲</A><A REL=NEXT HREF="06_ai.htm">▶</A></H1>

<HR>

<H2>
6.1.8.1 Examples of clause grouping</H2> 
<PRE>
;; Group conditional clauses.
 (loop for i in '(1 324 2345 323 2 4 235 252)
       when (oddp i)
         do (print i)
         and collect i into odd-numbers
         and do (terpri)
       else                              ; I is even.
         collect i into even-numbers
       finally
         (return (values odd-numbers even-numbers)))
&gt;&gt;  1 
&gt;&gt;  
&gt;&gt;  2345 
&gt;&gt;  
&gt;&gt;  323 
&gt;&gt;  
&gt;&gt;  235 
=&gt;  (1 2345 323 235), (324 2 4 252)

;; Collect numbers larger than 3.
 (loop for i in '(1 2 3 4 5 6)
       when (and (&gt; i 3) i)
       collect it)                      ; IT refers to (and (&gt; i 3) i).
=&gt;  (4 5 6)
 
;; Find a number in a list.
 (loop for i in '(1 2 3 4 5 6)
       when (and (&gt; i 3) i)
       return it)
=&gt;  4
     
;; The above example is similar to the following one.
 (loop for i in '(1 2 3 4 5 6)
       thereis (and (&gt; i 3) i))
=&gt;  4


;; Nest conditional clauses.
 (let ((list '(0 3.0 apple 4 5 9.8 orange banana)))
   (loop for i in list
         when (numberp i)
           when (floatp i)
             collect i into float-numbers
           else                                  ; Not (floatp i)
             collect i into other-numbers
         else                                    ; Not (numberp i)
           when (symbolp i) 
             collect i into symbol-list
           else                                  ; Not (symbolp i)
             do (error &quot;found a funny value in list ~S, value ~S~%&quot; list i)
         finally (return (values float-numbers other-numbers symbol-list))))
=&gt;  (3.0 9.8), (0 4 5), (APPLE ORANGE BANANA)

;; Without the END preposition, the last AND would apply to the
;; inner IF rather than the outer one.
 (loop for x from 0 to 3 
       do (print x)
       if (zerop (mod x 2))
         do (princ &quot; a&quot;)
          and if (zerop (floor x 2))
                do (princ &quot; b&quot;)
                end
          and do (princ &quot; c&quot;))
&gt;&gt;  0  a b c
&gt;&gt;  1 
&gt;&gt;  2  a c
&gt;&gt;  3 
=&gt;  NIL
</PRE>
</b> <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
