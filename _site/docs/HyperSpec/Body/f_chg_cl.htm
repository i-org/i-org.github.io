<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Standard Generic Function CHANGE-CLASS</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_upda_1.htm">
<LINK REL=UP HREF="c_object.htm">
<LINK REL=NEXT HREF="f_slt_bo.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="f_upda_1.htm">◀</A><A REL=UP HREF="c_object.htm">▲</A><A REL=NEXT HREF="f_slt_bo.htm">▶</A></H1>

<HR>

<A NAME="change-class"><I>Standard Generic Function</I> <B>CHANGE-CLASS</B></A> <P>
<p><b>●语法设定:</b><p>
 <P>
 
<B>change-class</B> <I>instance new-class <b>&amp;key</b> <b>&amp;allow-other-keys</b></I> =&gt; <I>instance</I><P>
  <P>
<P><B>Method Signatures:</B><P>
 <P>
 
<B>change-class</B> <I>(<I>instance</I><B> <A REL=DEFINITION HREF="t_std_ob.htm#standard-object">standard-object</A></B>) (<I>new-class</I><B> <A REL=DEFINITION HREF="t_std_cl.htm#standard-class">standard-class</A></B>) <b>&amp;rest</b> initargs</I><P>
 <P>

<B>change-class</B> <I>(<I>instance</I><B> <A REL=DEFINITION HREF="t_t.htm#t">t</A></B>) (<I>new-class</I><B> <A REL=DEFINITION HREF="t_symbol.htm#symbol">symbol</A></B>) <b>&amp;rest</b> initargs</I><P>
  <P>
<p><b>●参数和值:</b><P>
 <P>
<I>instance</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>new-class</I>---a <A REL=DEFINITION HREF="26_glo_c.htm#class_designator"><I>class designator</I></A>. <P>
 <I>initargs</I>---an <A REL=DEFINITION HREF="26_glo_i.htm#initialization_argument_list"><I>initialization argument list</I></A>.  <P>
<p><b>●详情:</b><P>
 <P>
The <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> <A REL=DEFINITION HREF="#change-class"><B>change-class</B></A> changes the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> of an <I>instance</I> to <I>new-class</I>. It destructively modifies and returns the <I>instance</I>. <P>
If in the old <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> there is any <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> of the same name as a local <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> in the <I>new-class</I>, the value of that <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> is retained. This means that if the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> has a value, the value returned by <A REL=DEFINITION HREF="f_slt_va.htm#slot-value"><B>slot-value</B></A> after <A REL=DEFINITION HREF="#change-class"><B>change-class</B></A> is invoked is <A REL=DEFINITION HREF="f_eql.htm#eql"><B>eql</B></A> to the value returned by <A REL=DEFINITION HREF="f_slt_va.htm#slot-value"><B>slot-value</B></A> before <A REL=DEFINITION HREF="#change-class"><B>change-class</B></A> is invoked. Similarly, if the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> was unbound, it remains unbound. The other <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> are initialized as described in <A REL HREF="07_b.htm">Section 7.2 (Changing the Class of an Instance)</A>. <P>
After completing all other actions, <A REL=DEFINITION HREF="#change-class"><B>change-class</B></A> invokes <A REL=DEFINITION HREF="f_update.htm#update-instance-for-different-class"><B>update-instance-for-different-class</B></A>. The generic function <A REL=DEFINITION HREF="f_update.htm#update-instance-for-different-class"><B>update-instance-for-different-class</B></A> can be used to assign values to slots in the transformed instance.  See <A REL=CHILD HREF="07_bb.htm">Section 7.2.2 (Initializing Newly Added Local Slots)</A>.  <P>
 If the second of the above <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> is selected, that <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> invokes <A REL=DEFINITION HREF="#change-class"><B>change-class</B></A> on <I>instance</I>, <b>(find-class </b><I>new-class</I><b>)</b>, and the <I>initargs</I>.  <P>
<p><b>●例子:</b><P>
 <P>
<PRE>
 
 (defclass position () ())
  
 (defclass x-y-position (position)
     ((x :initform 0 :initarg :x)
      (y :initform 0 :initarg :y)))
  
 (defclass rho-theta-position (position)
     ((rho :initform 0)
      (theta :initform 0)))
  
 (defmethod update-instance-for-different-class :before ((old x-y-position) 
                                                         (new rho-theta-position)
                                                         &amp;key)
   ;; Copy the position information from old to new to make new
   ;; be a rho-theta-position at the same position as old.
   (let ((x (slot-value old 'x))
         (y (slot-value old 'y)))
     (setf (slot-value new 'rho) (sqrt (+ (* x x) (* y y)))
           (slot-value new 'theta) (atan y x))))
  
;;; At this point an instance of the class x-y-position can be
;;; changed to be an instance of the class rho-theta-position using
;;; change-class:
 
 (setq p1 (make-instance 'x-y-position :x 2 :y 0))
  
 (change-class p1 'rho-theta-position)
  
;;; The result is that the instance bound to p1 is now an instance of
;;; the class rho-theta-position.   The update-instance-for-different-class
;;; method performed the initialization of the rho and theta slots based
;;; on the value of the x and y slots, which were maintained by
;;; the old instance.
 
</PRE>
</b> <P>
<p><b>●例子:</b> None.
 <P>
<p><b>●受制于：</b> 无。</p>
 <P>
<p><b>●例外情况：</b> 无。</p>
 <P>
<p><b>●更多信息:</b><P>
 <P>
<A REL=DEFINITION HREF="f_update.htm#update-instance-for-different-class"><B>update-instance-for-different-class</B></A>, <h2><A REL=CHILD HREF="07_b.htm">Section 7.2 (Changing the Class of an Instance)</A> <P>
<p><b>●说明:</b><P>
 <P>
The generic function <A REL=DEFINITION HREF="#change-class"><B>change-class</B></A> has several semantic difficulties. First, it performs a destructive operation that can be invoked within a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> on an <A REL=DEFINITION HREF="26_glo_i.htm#instance"><I>instance</I></A> that was used to select that <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A>. When multiple <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> are involved because <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> are being combined, the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> currently executing or about to be executed may no longer be applicable. Second, some implementations might use compiler optimizations of slot <A REL=DEFINITION HREF="26_glo_a.htm#access"><I>access</I></A>, and when the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> of an <A REL=DEFINITION HREF="26_glo_i.htm#instance"><I>instance</I></A> is changed the assumptions the compiler made might be violated. This implies that a programmer must not use <A REL=DEFINITION HREF="#change-class"><B>change-class</B></A> inside a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> if any <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> for that <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> <A REL=DEFINITION HREF="26_glo_a.htm#access"><I>access</I></A> any <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A>, or the results are undefined. <P>
<p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss023.htm">CHANGE-CLASS-INITARGS:PERMIT</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
