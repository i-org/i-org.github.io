<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 3.1.2.1.1</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="03_aba.htm">
<LINK REL=UP HREF="03_aba.htm">
<LINK REL=NEXT HREF="03_abaaa.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="03_aba.htm">◀</A><A REL=UP HREF="03_aba.htm">▲</A><A REL=NEXT HREF="03_abaaa.htm">▶</A></H1>

<HR>

<H2>
3.1.2.1.1 Symbols as Forms</H2>  <P>
If a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>, then it is either a <A REL=DEFINITION HREF="26_glo_s.htm#symbol_macro"><I>symbol macro</I></A> or a <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A>. <P>
The <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> names a <A REL=DEFINITION HREF="26_glo_s.htm#symbol_macro"><I>symbol macro</I></A> if there is a <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>binding</I></A> of the <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> as a <A REL=DEFINITION HREF="26_glo_s.htm#symbol_macro"><I>symbol macro</I></A> in the current <A REL=DEFINITION HREF="26_glo_l.htm#lexical_environment"><I>lexical environment</I></A>  (see <A REL=DEFINITION HREF="m_defi_1.htm#define-symbol-macro"><B>define-symbol-macro</B></A> and <A REL=DEFINITION HREF="s_symbol.htm#symbol-macrolet"><B>symbol-macrolet</B></A>).  If the <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol_macro"><I>symbol macro</I></A>, its expansion function is obtained. The expansion function is a function of two arguments, and is invoked by calling the <A REL=DEFINITION HREF="26_glo_m.htm#macroexpand_hook"><I>macroexpand hook</I></A> with the expansion function as its first argument, the <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> as its second argument, and an <A REL=DEFINITION HREF="26_glo_e.htm#environment_object"><I>environment object</I></A> (corresponding to the current <A REL=DEFINITION HREF="26_glo_l.htm#lexical_environment"><I>lexical environment</I></A>) as its third argument. The <A REL=DEFINITION HREF="26_glo_m.htm#macroexpand_hook"><I>macroexpand hook</I></A>, in turn, calls the expansion function with the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> as its first argument and the <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A> as its second argument. The <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of the expansion function, which is passed through by the <A REL=DEFINITION HREF="26_glo_m.htm#macroexpand_hook"><I>macroexpand hook</I></A>, is a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. This resulting <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is processed in place of the original <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>. <P>
If a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> that is not a <A REL=DEFINITION HREF="26_glo_s.htm#symbol_macro"><I>symbol macro</I></A>, then it is the <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> of a <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A>, and the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of that <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> is returned. There are three kinds of variables: <A REL=DEFINITION HREF="26_glo_l.htm#lexical_variable"><I>lexical variables</I></A>, <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_variable"><I>dynamic variables</I></A>, and <A REL=DEFINITION HREF="26_glo_c.htm#constant_variable"><I>constant variables</I></A>. A <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> can store one <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. The main operations on a <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> are to <A REL=DEFINITION HREF="26_glo_r.htm#read"><I>read</I></A>[1] and to <A REL=DEFINITION HREF="26_glo_w.htm#write"><I>write</I></A>[1] its <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A>. <P>
An error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_unbo_1.htm#unbound-variable"><B>unbound-variable</B></A> should be signaled if an <A REL=DEFINITION HREF="26_glo_u.htm#unbound_variable"><I>unbound variable</I></A> is referenced. <P>
<A REL=DEFINITION HREF="26_glo_n.htm#non-constant_variable"><I>Non-constant variables</I></A> can be <I>assigned</I> by using <A REL=DEFINITION HREF="s_setq.htm#setq"><B>setq</B></A> or <A REL=DEFINITION HREF="26_glo_b.htm#bound"><I>bound</I></A>[3] by using <A REL=DEFINITION HREF="s_let_l.htm#let"><B>let</B></A>. The next figure lists some <A REL=DEFINITION HREF="26_glo_d.htm#defined_name"><I>defined names</I></A> that are applicable to assigning, binding, and defining <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variables</I></A>. <P>
<PRE>
<A REL=DEFINITION HREF="f_boundp.htm#boundp">boundp</A>        <A REL=DEFINITION HREF="s_let_l.htm#let">let</A>                  <A REL=DEFINITION HREF="s_progv.htm#progv">progv</A>         
<A REL=DEFINITION HREF="m_defcon.htm#defconstant">defconstant</A>   <A REL=DEFINITION HREF="s_let_l.htm#letST">let*</A>                 <A REL=DEFINITION HREF="m_psetq.htm#psetq">psetq</A>         
<A REL=DEFINITION HREF="m_defpar.htm#defparameter">defparameter</A>  <A REL=DEFINITION HREF="f_makunb.htm#makunbound">makunbound</A>           <A REL=DEFINITION HREF="f_set.htm#set">set</A>           
<A REL=DEFINITION HREF="m_defpar.htm#defvar">defvar</A>        <A REL=DEFINITION HREF="m_multip.htm#multiple-value-bind">multiple-value-bind</A>  <A REL=DEFINITION HREF="s_setq.htm#setq">setq</A>          
<A REL=DEFINITION HREF="a_lambda.htm#lambda">lambda</A>        <A REL=DEFINITION HREF="m_mult_2.htm#multiple-value-setq">multiple-value-setq</A>  <A REL=DEFINITION HREF="f_symb_5.htm#symbol-value">symbol-value</A>  
</PRE>
<p><b>■图表 3-1.  Some Defined Names Applicable to Variables</B> <P>
The following is a description of each kind of variable. <P>

 
<h2><A REL=CHILD HREF="03_abaaa.htm">
3.1.2.1.1.1 Lexical Variables</a></h2>
 
<h2><A REL=CHILD HREF="03_abaab.htm">
3.1.2.1.1.2 Dynamic Variables</a></h2>
 
<h2><A REL=CHILD HREF="03_abaac.htm">
3.1.2.1.1.3 Constant Variables</a></h2>
 
<h2><A REL=CHILD HREF="03_abaad.htm">
3.1.2.1.1.4 Symbols Naming Both Lexical and Dynamic Variables</a></h2><p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss198.htm">ISO-COMPATIBILITY:ADD-SUBSTRATE</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
