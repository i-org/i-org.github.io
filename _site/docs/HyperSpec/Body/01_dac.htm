<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 1.4.1.3</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="01_dabc.htm">
<LINK REL=UP HREF="01_da.htm">
<LINK REL=NEXT HREF="01_dad.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="01_dabc.htm">◀</A><A REL=UP HREF="01_da.htm">▲</A><A REL=NEXT HREF="01_dad.htm">▶</A></H1>

<HR>

<H2>
1.4.1.3 特殊记号 Special Symbols</H2> <P>
The special symbols described here are used as a notational convenience within this document, and are part of neither the Common Lisp language nor its environment. <P>
<P><ul><li>=&gt;   输出<P></li>
This indicates evaluation. For example: <P>
<PRE>
 (+ 4 5) =&gt;  9 
</PRE>
</b> This means that the result of evaluating the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> <b>(+ 4 5)</b> is <b>9</b>. <P>
If a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> returns <A REL=DEFINITION HREF="26_glo_m.htm#multiple_values"><I>multiple values</I></A>, those values might be shown separated by spaces, line breaks, or commas. For example: <P>
<PRE>
 (truncate 7 5)
=&gt;  1 2
 (truncate 7 5) 
=&gt;  1
   2
 (truncate 7 5)
=&gt;  1, 2
</PRE>
</b> <P>
Each of the above three examples is equivalent, and specifies that <b>(truncate 7 5)</b> returns two values, which are <b>1</b> and <b>2</b>. <P>
Some <A REL=DEFINITION HREF="26_glo_c.htm#conforming_implementation"><I>conforming implementations</I></A> actually type an arrow (or some other indicator) before showing return values, while others do not. <P>
<li>OR=&gt;   其他可能输出结果<P></li>
The notation ``OR=&gt; '' is used to denote one of several possible alternate results. The example <P>
<PRE>
 (char-name #\a)
=&gt;  NIL
OR=&gt;  &quot;LOWERCASE-a&quot;
OR=&gt;  &quot;Small-A&quot;
OR=&gt;  &quot;LA01&quot;
</PRE>
</b> <P>
indicates that <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, <b>&quot;LOWERCASE-a&quot;</b>, <b>&quot;Small-A&quot;</b>, <b>&quot;LA01&quot;</b> are among the possible results of <b>(char-name #\a)</b>---each with equal preference. Unless explicitly specified otherwise, it should not be assumed that the set of possible results shown is exhaustive. Formally, the above example is equivalent to <P>
<PRE>
 (char-name #\a) =&gt;  <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent">implementation-dependent</A>
</PRE>
</b> <P>
but it is intended to provide additional information to illustrate some of the ways in which it is permitted for implementations to diverge. <P>
<li>NOT=&gt;   不可能出现的输出结果<P></li>
The notation ``NOT=&gt; '' is used to denote a result which is not possible. This might be used, for example, in order to emphasize a situation where some anticipated misconception might lead the reader to falsely believe that the result might be possible. For example, <P>
<PRE>
 (function-lambda-expression 
    (funcall #'(lambda (x) #'(lambda () x)) nil))
=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA () X), <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
NOT=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
NOT=&gt;  (LAMBDA () X), <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
</PRE>
</b> <P>
<li>&gt;&gt;   输入<P></li>
Common Lisp specifies input and output with respect to a non-interactive stream model. The specific details of how interactive input and output are mapped onto that non-interactive model are <A REL=DEFINITION HREF="26_glo_i.htm#implementation-defined"><I>implementation-defined</I></A>. <P>
For example, <A REL=DEFINITION HREF="26_glo_c.htm#conforming_implementation"><I>conforming implementations</I></A> are permitted to differ in issues of how interactive input is terminated. For example, the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="f_rd_rd.htm#read"><B>read</B></A> terminates when the final delimiter is typed on a non-interactive stream. In some <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A>, an interactive call to <A REL=DEFINITION HREF="f_rd_rd.htm#read"><B>read</B></A> returns as soon as the final delimiter is typed, even if that delimiter is not a <A REL=DEFINITION HREF="26_glo_n.htm#newline"><I>newline</I></A>. In other <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A>, a final <A REL=DEFINITION HREF="26_glo_n.htm#newline"><I>newline</I></A> is always required. In still other <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A>, there might be a 
command which ``activates'' a buffer full of input without the command itself being visible on the program's input stream. <P>
In the examples in this document, the notation ``&gt;&gt; '' precedes lines where interactive input and output occurs. Within such a scenario, ``this notation'' notates user input. <P>
For example, the notation <P>
<PRE>
 (+ 1 (print (+ (sqrt (read)) (sqrt (read)))))
&gt;&gt;  9 16 
&gt;&gt;  7
=&gt;  8
</PRE>
</b> <P>
shows an interaction in which ``<b>(+ 1 (print (+ (sqrt (read)) (sqrt (read)))))</b>'' is a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> to be <I>evaluated</I>, ``<b>9 16 </b>'' is interactive input, ``<b>7</b>'' is interactive output, and ``<b>8</b>'' is the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> <I>yielded</I> from the <A REL=DEFINITION HREF="26_glo_e.htm#evaluation"><I>evaluation</I></A>. <P>
The use of this notation is intended to disguise small differences in interactive input and output behavior between <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A>. <P>
Sometimes, the non-interactive stream model calls for a <A REL=DEFINITION HREF="26_glo_n.htm#newline"><I>newline</I></A>. How that <A REL=DEFINITION HREF="26_glo_n.htm#newline"><I>newline</I></A> character is interactively entered is an <A REL=DEFINITION HREF="26_glo_i.htm#implementation-defined"><I>implementation-defined</I></A> detail of the user interface, but in that case, either the notation ``&lt;Newline&gt;'' or ``&lt;NEWLINE&gt;'' might be used. <P>
<PRE>
 (progn (format t &quot;~&amp;Who? &quot;) (read-line))
&gt;&gt;  Who? Fred, Mary, and Sally&lt;NEWLINE&gt;
=&gt;  &quot;Fred, Mary, and Sally&quot;, <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>
</PRE>
</b> <P>

<li>==   等价<P></li>
This indicates code equivalence. For example: <P>
<PRE>
 (gcd x (gcd y z)) ==  (gcd (gcd x y) z)
</PRE>
</b> This means that the results and observable side-effects of evaluating the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> <b>(gcd x (gcd y z))</b>  are always the same as the results and observable side-effects of <b>(gcd (gcd x y) z)</b>  for any <b>x</b>, <b>y</b>, and <b>z</b>. <P>
<P></ul><P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
