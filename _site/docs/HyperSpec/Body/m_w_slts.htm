<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Macro WITH-SLOTS</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="m_w_acce.htm">
<LINK REL=UP HREF="c_object.htm">
<LINK REL=NEXT HREF="m_defcla.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="m_w_acce.htm">◀</A><A REL=UP HREF="c_object.htm">▲</A><A REL=NEXT HREF="m_defcla.htm">▶</A></H1>

<HR>

<A NAME="with-slots"><I>Macro</I> <B>WITH-SLOTS</B></A> <P>
 <P>
<p><b>●语法设定:</b><p>
 <P>

<B>with-slots</B> <I>(<I>slot-entry</I><B>*</B>) instance-form <I>declaration</I><B>*</B> <I>form</I><B>*</B></I><P> =&gt; <I><I>result</I><B>*</B></I><P>
 <P>
<PRE>
slot-entry::= slot-name | (variable-name slot-name) 
</PRE>
 <P>
<p><b>●参数和值:</b><P>
 <P>
<I>slot-name</I>---a <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A>; not evaluated. <P>
<I>variable-name</I>---a <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A>; not evaluated. <P>
<I>instance-form</I>---a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>; evaluted to produce <I>instance</I>. <P>
<I>instance</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>declaration</I>---a <A REL=DEFINITION HREF="s_declar.htm#declare"><B>declare</B></A> <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A>; not evaluated. <P>
<I>forms</I>---an <A REL=DEFINITION HREF="26_glo_i.htm#implicit_progn"><I>implicit progn</I></A>. <P>
<I>results</I>---the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A> returned by the <I>forms</I>. <P>
<p><b>●详情:</b><P>
 <P>
The macro <A REL=DEFINITION HREF="#with-slots"><B>with-slots</B></A> <A REL=DEFINITION HREF="26_glo_e.htm#establish"><I>establishes</I></A> a <A REL=DEFINITION HREF="26_glo_l.htm#lexical_environment"><I>lexical environment</I></A> for referring to the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> in the <I>instance</I> named by the given <I>slot-names</I> as though they were <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variables</I></A>. Within such a context the value of the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> can be specified by using its slot name, as if it were a lexically bound variable. Both <A REL=DEFINITION HREF="m_setf_.htm#setf"><B>setf</B></A> and <A REL=DEFINITION HREF="s_setq.htm#setq"><B>setq</B></A> can be used to set the value of the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
The macro <A REL=DEFINITION HREF="#with-slots"><B>with-slots</B></A> translates an appearance of the slot name as a <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> into a call to <A REL=DEFINITION HREF="f_slt_va.htm#slot-value"><B>slot-value</B></A>. <P>
<p><b>●例子:</b><P>
 <P>
<PRE>
 (defclass thing ()
           ((x :initarg :x :accessor thing-x)
            (y :initarg :y :accessor thing-y)))
=&gt;  #&lt;STANDARD-CLASS THING 250020173&gt;
 (defmethod (setf thing-x) :before (new-x (thing thing))
   (format t &quot;~&amp;Changing X from ~D to ~D in ~S.~%&quot;
           (thing-x thing) new-x thing))
 (setq thing (make-instance 'thing :x 0 :y 1)) =&gt;  #&lt;THING 62310540&gt;
 (with-slots (x y) thing (incf x) (incf y)) =&gt;  2
 (values (thing-x thing) (thing-y thing)) =&gt;  1, 2
 (setq thing1 (make-instance 'thing :x 1 :y 2)) =&gt;  #&lt;THING 43135676&gt;
 (setq thing2 (make-instance 'thing :x 7 :y 8)) =&gt;  #&lt;THING 43147374&gt;
 (with-slots ((x1 x) (y1 y))
             thing1
   (with-slots ((x2 x) (y2 y))
               thing2
     (list (list x1 (thing-x thing1) y1 (thing-y thing1)
                 x2 (thing-x thing2) y2 (thing-y thing2))
           (setq x1 (+ y1 x2))
           (list x1 (thing-x thing1) y1 (thing-y thing1)
                 x2 (thing-x thing2) y2 (thing-y thing2))
           (setf (thing-x thing2) (list x1))
           (list x1 (thing-x thing1) y1 (thing-y thing1)
                 x2 (thing-x thing2) y2 (thing-y thing2)))))
&gt;&gt;  Changing X from 7 to (9) in #&lt;THING 43147374&gt;.
=&gt;  ((1 1 2 2 7 7 8 8)
     9
     (9 9 2 2 7 7 8 8) 
     (9)
     (9 9 2 2 (9) (9) 8 8))
</PRE>
</b> <P>
<p><b>●受制于:</b><P>
 <P>
<A REL=DEFINITION HREF="m_defcla.htm#defclass"><B>defclass</B></A> <P>
<p><b>●例外情况：</b><P>
 <P>
The consequences are undefined if any <I>slot-name</I> is not the name of a <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> in the <I>instance</I>. <P>
<p><b>●更多信息:</b><P>
 <P>
<A REL=DEFINITION HREF="m_w_acce.htm#with-accessors"><B>with-accessors</B></A>, <A REL=DEFINITION HREF="f_slt_va.htm#slot-value"><B>slot-value</B></A>, <A REL=DEFINITION HREF="s_symbol.htm#symbol-macrolet"><B>symbol-macrolet</B></A> <P>
<p><b>●说明:</b><P>
 <P>
A <A REL=DEFINITION HREF="#with-slots"><B>with-slots</B></A> expression of the form: <P>
 (with-slots (<I>slot-entry</I>1<I></I> ... <I>slot-entry</I>n<I></I>) <I>instance-form</I> <I>form</I>1<I></I> ... <I>form</I>k<I></I>) <P>
expands into the equivalent of <P>
 
<PRE>
(let ((in instance-form))
  (symbol-macrolet (Q1 ... Qn) form1 ... formk))
</PRE>
</b> <P>
where <I>Q</I>i is <P>
 
<PRE>
(slot-entryi () (slot-value in 'slot-entryi))
</PRE>
</b> <P>
if <I>slot-entry</I>i is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> and is <P>
 
<PRE>
(variable-namei () (slot-value in 'slot-namei))
</PRE>
</b> <P>
if <I>slot-entry</I>i is of the form <P>
<PRE>
(variable-namei 'slot-namei))
</PRE>
</b> <P>
 <P>
<p><hr> <a rel=meta href="../Issues/I_Categ.htm">X3J13设计清单</A><i>非标准部分</i>，可查下面章节：<p><UL><LI> <A REL=CHILD HREF="../Issues/iss097.htm">DECLS-AND-DOC</A><P></UL><HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
