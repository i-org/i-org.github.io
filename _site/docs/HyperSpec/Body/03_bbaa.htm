<!DOCTYPE html>
<HTML>
<HEAD><meta http-equiv="content-type" content="text/html; charset=utf-8">
<TITLE>CLHS: Section 3.2.2.1.1</TITLE>
<LINK HREF="../Data/style.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="03_bba.htm">
<LINK REL=UP HREF="03_bba.htm">
<LINK REL=NEXT HREF="03_bbab.htm">
</HEAD>
<BODY>
<h1><A REL=TOP HREF="../Front/index.htm">《通链参考手册》</A> <A REL=PREV HREF="03_bba.htm">◀</A><A REL=UP HREF="03_bba.htm">▲</A><A REL=NEXT HREF="03_bbab.htm">▶</A></H1>

<HR>

<H2>
3.2.2.1.1 Purpose of Compiler Macros</H2> <P>
The purpose of the <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro"><I>compiler macro</I></A> facility is to permit selective source code transformations as optimization advice to the <A REL=DEFINITION HREF="26_glo_c.htm#compiler"><I>compiler</I></A>. When a <A REL=DEFINITION HREF="26_glo_c.htm#compound_form"><I>compound form</I></A> is being processed (as by the compiler), if the <A REL=DEFINITION HREF="26_glo_o.htm#operator"><I>operator</I></A> names a <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro"><I>compiler macro</I></A> then the <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro_function"><I>compiler macro function</I></A> may be invoked on the form, and the resulting expansion recursively processed in preference to performing the usual processing on the original <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> according to its normal interpretation as a <A REL=DEFINITION HREF="26_glo_f.htm#function_form"><I>function form</I></A> or <A REL=DEFINITION HREF="26_glo_m.htm#macro_form"><I>macro form</I></A>. <P>
A <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro_function"><I>compiler macro function</I></A>, like a <A REL=DEFINITION HREF="26_glo_m.htm#macro_function"><I>macro function</I></A>, is a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A>: the entire call <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> and the <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A>. Unlike an ordinary <A REL=DEFINITION HREF="26_glo_m.htm#macro_function"><I>macro function</I></A>, a <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro_function"><I>compiler macro function</I></A> can decline to provide an expansion merely by returning a value that is the <A REL=DEFINITION HREF="26_glo_s.htm#same"><I>same</I></A> as the original <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. The consequences are undefined if a <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro_function"><I>compiler macro function</I></A> destructively modifies any part of its <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> argument. <P>
The <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> passed to the compiler macro function can either be a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> whose <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> is the function name, or a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> whose <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> is <A REL=DEFINITION HREF="f_funcal.htm#funcall"><B>funcall</B></A> and whose <A REL=DEFINITION HREF="26_glo_c.htm#cadr"><I>cadr</I></A> is a list <b>(function </b><I>name</I><b>)</b>; note that this affects destructuring of the form argument by the <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro_function"><I>compiler macro function</I></A>. <A REL=DEFINITION HREF="m_define.htm#define-compiler-macro"><B>define-compiler-macro</B></A> arranges for destructuring of arguments to be performed correctly for both possible formats. <P>
When <A REL=DEFINITION HREF="f_cmp_fi.htm#compile-file"><B>compile-file</B></A> chooses to expand a <A REL=DEFINITION HREF="26_glo_t.htm#top_level_form"><I>top level form</I></A> that is a <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro"><I>compiler macro</I></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>, the expansion is also treated as a <A REL=DEFINITION HREF="26_glo_t.htm#top_level_form"><I>top level form</I></A> for the purposes of <A REL=DEFINITION HREF="s_eval_w.htm#eval-when"><B>eval-when</B></A> processing; see <A REL=CHILD HREF="03_bca.htm">Section 3.2.3.1 (Processing of Top Level Forms)</A>. <P>
<HR>

<a href="../Front/index.htm"> ◇首页 </A> § <a href="../Front/Contents.htm"> ◎章节目录 </a> § <a href="../Front/X_Master.htm"> □内容索引 </a> § <a  href="../Front/X_Symbol.htm"> ○符号索引 </a> § <a href="../Body/26_a.htm"> △术语表 </a> § <a href="../Issues/I_Categ.htm"> ※设计草案 </a><hr>

<div class="footer"><a rel=copyright href="../Front/Help.htm#Legal"><i>2012 此修改版放弃所有版权</i></a></div>
</BODY>
</HTML>
